// // // // // // // // // // // // // // // // // // // // // // // // // // import React, { useState } from "react";
// // // // // // // // // // // // // // // // // // // // // // // // // // import { View, Image, StyleSheet, Alert, Text } from "react-native";
// // // // // // // // // // // // // // // // // // // // // // // // // // import { Provider as PaperProvider, Button } from "react-native-paper";
// // // // // // // // // // // // // // // // // // // // // // // // // // import { DraxProvider, DraxView } from "react-native-drax";

// // // // // // // // // // // // // // // // // // // // // // // // // // const onionParts = [
// // // // // // // // // // // // // // // // // // // // // // // // // //   { id: 1, position: { top: "0%", left: "10%" }, correctAnswer: "foliar stem" },
// // // // // // // // // // // // // // // // // // // // // // // // // //   { id: 2, position: { top: "45%", left: "40%" }, correctAnswer: "bulb scale" },
// // // // // // // // // // // // // // // // // // // // // // // // // //   { id: 3, position: { top: "11%", left: "72%" }, correctAnswer: "tunic" },
// // // // // // // // // // // // // // // // // // // // // // // // // //   { id: 4, position: { top: "82%", left: "53%" }, correctAnswer: "root" },
// // // // // // // // // // // // // // // // // // // // // // // // // // ];

// // // // // // // // // // // // // // // // // // // // // // // // // // const OnionParts = () => {
// // // // // // // // // // // // // // // // // // // // // // // // // //   const [droppedItems, setDroppedItems] = useState({
// // // // // // // // // // // // // // // // // // // // // // // // // //     1: null,
// // // // // // // // // // // // // // // // // // // // // // // // // //     2: null,
// // // // // // // // // // // // // // // // // // // // // // // // // //     3: null,
// // // // // // // // // // // // // // // // // // // // // // // // // //     4: null,
// // // // // // // // // // // // // // // // // // // // // // // // // //   });
// // // // // // // // // // // // // // // // // // // // // // // // // //   const [draggedItemsStatus, setDraggedItemsStatus] = useState({
// // // // // // // // // // // // // // // // // // // // // // // // // //     "foliar stem": false,
// // // // // // // // // // // // // // // // // // // // // // // // // //     "bulb scale": false,
// // // // // // // // // // // // // // // // // // // // // // // // // //     tunic: false,
// // // // // // // // // // // // // // // // // // // // // // // // // //     root: false,
// // // // // // // // // // // // // // // // // // // // // // // // // //   });
// // // // // // // // // // // // // // // // // // // // // // // // // //   const [isAllDropped, setIsAllDropped] = useState(false); // Track if all items are dropped correctly
// // // // // // // // // // // // // // // // // // // // // // // // // //   const [feedback, setFeedback] = useState(""); // Track completion message

// // // // // // // // // // // // // // // // // // // // // // // // // //   const checkAnswers = () => {
// // // // // // // // // // // // // // // // // // // // // // // // // //     const isCorrect = Object.values(droppedItems).every(
// // // // // // // // // // // // // // // // // // // // // // // // // //       (item, index) => item === onionParts[index].correctAnswer
// // // // // // // // // // // // // // // // // // // // // // // // // //     );

// // // // // // // // // // // // // // // // // // // // // // // // // //     if (isCorrect) {
// // // // // // // // // // // // // // // // // // // // // // // // // //       setFeedback("Congratulations! All answers are correct.");
// // // // // // // // // // // // // // // // // // // // // // // // // //       Alert.alert("Correct!", "All answers are correct!");
// // // // // // // // // // // // // // // // // // // // // // // // // //       setIsAllDropped(true);
// // // // // // // // // // // // // // // // // // // // // // // // // //     } else {
// // // // // // // // // // // // // // // // // // // // // // // // // //       setFeedback("Some answers are incorrect. Please try again.");
// // // // // // // // // // // // // // // // // // // // // // // // // //       Alert.alert("Try Again!", "Some answers are incorrect.");
// // // // // // // // // // // // // // // // // // // // // // // // // //       setIsAllDropped(false);
// // // // // // // // // // // // // // // // // // // // // // // // // //     }
// // // // // // // // // // // // // // // // // // // // // // // // // //   };

// // // // // // // // // // // // // // // // // // // // // // // // // //   const handleSubmit = () => {
// // // // // // // // // // // // // // // // // // // // // // // // // //     Alert.alert("Submitted!", "Your answers have been submitted!");
// // // // // // // // // // // // // // // // // // // // // // // // // //   };

// // // // // // // // // // // // // // // // // // // // // // // // // //   const handleDrop = (id, droppedText) => {
// // // // // // // // // // // // // // // // // // // // // // // // // //     setDroppedItems((prev) => ({
// // // // // // // // // // // // // // // // // // // // // // // // // //       ...prev,
// // // // // // // // // // // // // // // // // // // // // // // // // //       [id]: droppedText,
// // // // // // // // // // // // // // // // // // // // // // // // // //     }));

// // // // // // // // // // // // // // // // // // // // // // // // // //     setDraggedItemsStatus((prev) => ({
// // // // // // // // // // // // // // // // // // // // // // // // // //       ...prev,
// // // // // // // // // // // // // // // // // // // // // // // // // //       [droppedText]: true,
// // // // // // // // // // // // // // // // // // // // // // // // // //     }));

// // // // // // // // // // // // // // // // // // // // // // // // // //     // Check if all items have been dropped
// // // // // // // // // // // // // // // // // // // // // // // // // //     const allDropped = Object.values(droppedItems).every(
// // // // // // // // // // // // // // // // // // // // // // // // // //       (item) => item !== null
// // // // // // // // // // // // // // // // // // // // // // // // // //     );
// // // // // // // // // // // // // // // // // // // // // // // // // //     setIsAllDropped(allDropped);
// // // // // // // // // // // // // // // // // // // // // // // // // //   };

// // // // // // // // // // // // // // // // // // // // // // // // // //   const handleReset = () => {
// // // // // // // // // // // // // // // // // // // // // // // // // //     setDroppedItems({ 1: null, 2: null, 3: null, 4: null });
// // // // // // // // // // // // // // // // // // // // // // // // // //     setDraggedItemsStatus({
// // // // // // // // // // // // // // // // // // // // // // // // // //       "foliar stem": false,
// // // // // // // // // // // // // // // // // // // // // // // // // //       "bulb scale": false,
// // // // // // // // // // // // // // // // // // // // // // // // // //       tunic: false,
// // // // // // // // // // // // // // // // // // // // // // // // // //       root: false,
// // // // // // // // // // // // // // // // // // // // // // // // // //     });
// // // // // // // // // // // // // // // // // // // // // // // // // //     setIsAllDropped(false);
// // // // // // // // // // // // // // // // // // // // // // // // // //     setFeedback(""); // Reset feedback
// // // // // // // // // // // // // // // // // // // // // // // // // //   };

// // // // // // // // // // // // // // // // // // // // // // // // // //   return (
// // // // // // // // // // // // // // // // // // // // // // // // // //     <PaperProvider>
// // // // // // // // // // // // // // // // // // // // // // // // // //       <DraxProvider>
// // // // // // // // // // // // // // // // // // // // // // // // // //         <View style={styles.container}>
// // // // // // // // // // // // // // // // // // // // // // // // // //           <Text variant="headlineLarge" style={styles.title}>
// // // // // // // // // // // // // // // // // // // // // // // // // //             Food - Label the Onion Parts
// // // // // // // // // // // // // // // // // // // // // // // // // //           </Text>
// // // // // // // // // // // // // // // // // // // // // // // // // //           <Text variant="titleMedium" style={styles.instruction}>
// // // // // // // // // // // // // // // // // // // // // // // // // //             Drag and drop the correct labels into the boxes on the onion image.
// // // // // // // // // // // // // // // // // // // // // // // // // //           </Text>

// // // // // // // // // // // // // // // // // // // // // // // // // //           <View style={styles.imageContainer}>
// // // // // // // // // // // // // // // // // // // // // // // // // //             <Image
// // // // // // // // // // // // // // // // // // // // // // // // // //               source={{
// // // // // // // // // // // // // // // // // // // // // // // // // //                 uri: "https://jadavpuruniversity.s3-ap-south-1.amazonaws.com/11-2024-7-330-purple-onion.png",
// // // // // // // // // // // // // // // // // // // // // // // // // //               }}
// // // // // // // // // // // // // // // // // // // // // // // // // //               style={styles.onionImage}
// // // // // // // // // // // // // // // // // // // // // // // // // //             />

// // // // // // // // // // // // // // // // // // // // // // // // // //             {onionParts.map((part) => (
// // // // // // // // // // // // // // // // // // // // // // // // // //               <DraxView
// // // // // // // // // // // // // // // // // // // // // // // // // //                 key={part.id}
// // // // // // // // // // // // // // // // // // // // // // // // // //                 style={[
// // // // // // // // // // // // // // // // // // // // // // // // // //                   styles.dot,
// // // // // // // // // // // // // // // // // // // // // // // // // //                   { top: part.position.top, left: part.position.left },
// // // // // // // // // // // // // // // // // // // // // // // // // //                   {
// // // // // // // // // // // // // // // // // // // // // // // // // //                     backgroundColor:
// // // // // // // // // // // // // // // // // // // // // // // // // //                       droppedItems[part.id] === part.correctAnswer
// // // // // // // // // // // // // // // // // // // // // // // // // //                         ? "green"
// // // // // // // // // // // // // // // // // // // // // // // // // //                         : "red",
// // // // // // // // // // // // // // // // // // // // // // // // // //                   },
// // // // // // // // // // // // // // // // // // // // // // // // // //                 ]}
// // // // // // // // // // // // // // // // // // // // // // // // // //                 onReceiveDragDrop={({ dragged }) => {
// // // // // // // // // // // // // // // // // // // // // // // // // //                   handleDrop(part.id, dragged.payload);
// // // // // // // // // // // // // // // // // // // // // // // // // //                 }}
// // // // // // // // // // // // // // // // // // // // // // // // // //               >
// // // // // // // // // // // // // // // // // // // // // // // // // //                 <Text style={styles.dropText}>
// // // // // // // // // // // // // // // // // // // // // // // // // //                   {droppedItems[part.id] || "Drop Here"}
// // // // // // // // // // // // // // // // // // // // // // // // // //                 </Text>
// // // // // // // // // // // // // // // // // // // // // // // // // //               </DraxView>
// // // // // // // // // // // // // // // // // // // // // // // // // //             ))}
// // // // // // // // // // // // // // // // // // // // // // // // // //           </View>

// // // // // // // // // // // // // // // // // // // // // // // // // //           <View style={styles.draggableContainer}>
// // // // // // // // // // // // // // // // // // // // // // // // // //             {["foliar stem", "bulb scale", "tunic", "root"].map(
// // // // // // // // // // // // // // // // // // // // // // // // // //               (item, index) =>
// // // // // // // // // // // // // // // // // // // // // // // // // //                 !draggedItemsStatus[item] && (
// // // // // // // // // // // // // // // // // // // // // // // // // //                   <DraxView
// // // // // // // // // // // // // // // // // // // // // // // // // //                     key={index}
// // // // // // // // // // // // // // // // // // // // // // // // // //                     style={styles.draggable}
// // // // // // // // // // // // // // // // // // // // // // // // // //                     payload={item}
// // // // // // // // // // // // // // // // // // // // // // // // // //                     renderContent={() => (
// // // // // // // // // // // // // // // // // // // // // // // // // //                       <Text style={styles.draggableText}>{item}</Text>
// // // // // // // // // // // // // // // // // // // // // // // // // //                     )}
// // // // // // // // // // // // // // // // // // // // // // // // // //                   />
// // // // // // // // // // // // // // // // // // // // // // // // // //                 )
// // // // // // // // // // // // // // // // // // // // // // // // // //             )}
// // // // // // // // // // // // // // // // // // // // // // // // // //           </View>

// // // // // // // // // // // // // // // // // // // // // // // // // //           {/* <Button
// // // // // // // // // // // // // // // // // // // // // // // // // //             mode="contained"
// // // // // // // // // // // // // // // // // // // // // // // // // //             onPress={checkAnswers}
// // // // // // // // // // // // // // // // // // // // // // // // // //             style={styles.button}
// // // // // // // // // // // // // // // // // // // // // // // // // //             disabled={!isAllDropped} // Disable button until all items are dropped
// // // // // // // // // // // // // // // // // // // // // // // // // //           >
// // // // // // // // // // // // // // // // // // // // // // // // // //             Check Answers
// // // // // // // // // // // // // // // // // // // // // // // // // //           </Button> */}

// // // // // // // // // // // // // // // // // // // // // // // // // //           {feedback && (
// // // // // // // // // // // // // // // // // // // // // // // // // //             <Text
// // // // // // // // // // // // // // // // // // // // // // // // // //               variant="titleMedium"
// // // // // // // // // // // // // // // // // // // // // // // // // //               style={{
// // // // // // // // // // // // // // // // // // // // // // // // // //                 textAlign: "center",
// // // // // // // // // // // // // // // // // // // // // // // // // //                 color: "red",
// // // // // // // // // // // // // // // // // // // // // // // // // //                 marginTop: 10,
// // // // // // // // // // // // // // // // // // // // // // // // // //                 marginBottom: 10,
// // // // // // // // // // // // // // // // // // // // // // // // // //                 paddingHorizontal: 5,
// // // // // // // // // // // // // // // // // // // // // // // // // //               }}
// // // // // // // // // // // // // // // // // // // // // // // // // //             >
// // // // // // // // // // // // // // // // // // // // // // // // // //               {feedback}
// // // // // // // // // // // // // // // // // // // // // // // // // //             </Text>
// // // // // // // // // // // // // // // // // // // // // // // // // //           )}

// // // // // // // // // // // // // // // // // // // // // // // // // //           <Text
// // // // // // // // // // // // // // // // // // // // // // // // // //             variant="titleMedium"
// // // // // // // // // // // // // // // // // // // // // // // // // //             style={{
// // // // // // // // // // // // // // // // // // // // // // // // // //               textAlign: "center",
// // // // // // // // // // // // // // // // // // // // // // // // // //               color: "red",
// // // // // // // // // // // // // // // // // // // // // // // // // //               marginTop: 10,
// // // // // // // // // // // // // // // // // // // // // // // // // //               marginBottom: 10,
// // // // // // // // // // // // // // // // // // // // // // // // // //               paddingHorizontal: 5,
// // // // // // // // // // // // // // // // // // // // // // // // // //             }}
// // // // // // // // // // // // // // // // // // // // // // // // // //           >
// // // // // // // // // // // // // // // // // // // // // // // // // //             Once you have droped the answer, click the submit button to submit
// // // // // // // // // // // // // // // // // // // // // // // // // //             your answers.
// // // // // // // // // // // // // // // // // // // // // // // // // //           </Text>

// // // // // // // // // // // // // // // // // // // // // // // // // //           <Button
// // // // // // // // // // // // // // // // // // // // // // // // // //             mode="contained"
// // // // // // // // // // // // // // // // // // // // // // // // // //             onPress={handleSubmit}
// // // // // // // // // // // // // // // // // // // // // // // // // //             style={styles.button}
// // // // // // // // // // // // // // // // // // // // // // // // // //             // disabled={!isAllDropped}
// // // // // // // // // // // // // // // // // // // // // // // // // //           >
// // // // // // // // // // // // // // // // // // // // // // // // // //             Submit
// // // // // // // // // // // // // // // // // // // // // // // // // //           </Button>
// // // // // // // // // // // // // // // // // // // // // // // // // //           {/*
// // // // // // // // // // // // // // // // // // // // // // // // // //           <Button mode="outlined" onPress={handleReset} style={styles.button}>
// // // // // // // // // // // // // // // // // // // // // // // // // //             Reset
// // // // // // // // // // // // // // // // // // // // // // // // // //           </Button> */}
// // // // // // // // // // // // // // // // // // // // // // // // // //         </View>
// // // // // // // // // // // // // // // // // // // // // // // // // //       </DraxProvider>
// // // // // // // // // // // // // // // // // // // // // // // // // //     </PaperProvider>
// // // // // // // // // // // // // // // // // // // // // // // // // //   );
// // // // // // // // // // // // // // // // // // // // // // // // // // };

// // // // // // // // // // // // // // // // // // // // // // // // // // const styles = StyleSheet.create({
// // // // // // // // // // // // // // // // // // // // // // // // // //   container: {
// // // // // // // // // // // // // // // // // // // // // // // // // //     flex: 1,
// // // // // // // // // // // // // // // // // // // // // // // // // //     justifyContent: "center",
// // // // // // // // // // // // // // // // // // // // // // // // // //     alignItems: "center",
// // // // // // // // // // // // // // // // // // // // // // // // // //     padding: 20,
// // // // // // // // // // // // // // // // // // // // // // // // // //     backgroundColor: "#f9f9f9",
// // // // // // // // // // // // // // // // // // // // // // // // // //   },
// // // // // // // // // // // // // // // // // // // // // // // // // //   title: {
// // // // // // // // // // // // // // // // // // // // // // // // // //     marginBottom: 20,
// // // // // // // // // // // // // // // // // // // // // // // // // //     textAlign: "center",
// // // // // // // // // // // // // // // // // // // // // // // // // //   },
// // // // // // // // // // // // // // // // // // // // // // // // // //   instruction: {
// // // // // // // // // // // // // // // // // // // // // // // // // //     textAlign: "center",
// // // // // // // // // // // // // // // // // // // // // // // // // //     marginBottom: 10,
// // // // // // // // // // // // // // // // // // // // // // // // // //   },
// // // // // // // // // // // // // // // // // // // // // // // // // //   imageContainer: {
// // // // // // // // // // // // // // // // // // // // // // // // // //     position: "relative",
// // // // // // // // // // // // // // // // // // // // // // // // // //     width: "100%",
// // // // // // // // // // // // // // // // // // // // // // // // // //     alignItems: "center",
// // // // // // // // // // // // // // // // // // // // // // // // // //   },
// // // // // // // // // // // // // // // // // // // // // // // // // //   onionImage: {
// // // // // // // // // // // // // // // // // // // // // // // // // //     width: "100%",
// // // // // // // // // // // // // // // // // // // // // // // // // //     height: 300,
// // // // // // // // // // // // // // // // // // // // // // // // // //     resizeMode: "contain",
// // // // // // // // // // // // // // // // // // // // // // // // // //   },
// // // // // // // // // // // // // // // // // // // // // // // // // //   dot: {
// // // // // // // // // // // // // // // // // // // // // // // // // //     position: "absolute",
// // // // // // // // // // // // // // // // // // // // // // // // // //     alignItems: "center",
// // // // // // // // // // // // // // // // // // // // // // // // // //     zIndex: 2,
// // // // // // // // // // // // // // // // // // // // // // // // // //     backgroundColor: "transparent",
// // // // // // // // // // // // // // // // // // // // // // // // // //     borderWidth: 1,
// // // // // // // // // // // // // // // // // // // // // // // // // //     padding: 5,
// // // // // // // // // // // // // // // // // // // // // // // // // //     borderColor: "#ccc",
// // // // // // // // // // // // // // // // // // // // // // // // // //     borderRadius: 5,
// // // // // // // // // // // // // // // // // // // // // // // // // //   },
// // // // // // // // // // // // // // // // // // // // // // // // // //   dropText: {
// // // // // // // // // // // // // // // // // // // // // // // // // //     padding: 10,
// // // // // // // // // // // // // // // // // // // // // // // // // //     textAlign: "center",
// // // // // // // // // // // // // // // // // // // // // // // // // //     backgroundColor: "#fff",
// // // // // // // // // // // // // // // // // // // // // // // // // //     width: 120,
// // // // // // // // // // // // // // // // // // // // // // // // // //   },
// // // // // // // // // // // // // // // // // // // // // // // // // //   draggableContainer: {
// // // // // // // // // // // // // // // // // // // // // // // // // //     flexDirection: "row",
// // // // // // // // // // // // // // // // // // // // // // // // // //     justifyContent: "space-around",
// // // // // // // // // // // // // // // // // // // // // // // // // //     marginTop: 20,
// // // // // // // // // // // // // // // // // // // // // // // // // //   },
// // // // // // // // // // // // // // // // // // // // // // // // // //   draggable: {
// // // // // // // // // // // // // // // // // // // // // // // // // //     padding: 10,
// // // // // // // // // // // // // // // // // // // // // // // // // //     margin: 5,
// // // // // // // // // // // // // // // // // // // // // // // // // //     backgroundColor: "#f0f0f0",
// // // // // // // // // // // // // // // // // // // // // // // // // //     borderWidth: 1,
// // // // // // // // // // // // // // // // // // // // // // // // // //     borderColor: "#ccc",
// // // // // // // // // // // // // // // // // // // // // // // // // //     borderRadius: 5,
// // // // // // // // // // // // // // // // // // // // // // // // // //   },
// // // // // // // // // // // // // // // // // // // // // // // // // //   draggableText: {
// // // // // // // // // // // // // // // // // // // // // // // // // //     fontSize: 16,
// // // // // // // // // // // // // // // // // // // // // // // // // //     textAlign: "center",
// // // // // // // // // // // // // // // // // // // // // // // // // //   },
// // // // // // // // // // // // // // // // // // // // // // // // // //   button: {
// // // // // // // // // // // // // // // // // // // // // // // // // //     marginTop: 20,
// // // // // // // // // // // // // // // // // // // // // // // // // //     marginBottom: 10,
// // // // // // // // // // // // // // // // // // // // // // // // // //   },
// // // // // // // // // // // // // // // // // // // // // // // // // // });

// // // // // // // // // // // // // // // // // // // // // // // // // // export default OnionParts;

// // // // // // // // // import React, { useState } from "react";
// // // // // // // // // import {
// // // // // // // // //   View,
// // // // // // // // //   StyleSheet,
// // // // // // // // //   Alert,
// // // // // // // // //   LogBox,
// // // // // // // // //   TextInput,
// // // // // // // // //   Image,
// // // // // // // // // } from "react-native";
// // // // // // // // // import Draggable from "react-native-draggable";
// // // // // // // // // import { Text } from "react-native-paper"; // Import Text from React Native Paper

// // // // // // // // // // Suppress the defaultProps warning for now
// // // // // // // // // LogBox.ignoreLogs([
// // // // // // // // //   "Warning: Draggable: Support for defaultProps will be removed from function components in a future major release.",
// // // // // // // // // ]);

// // // // // // // // // const App = () => {
// // // // // // // // //   // State to track if each item is dropped
// // // // // // // // //   const [dropped1, setDropped1] = useState(false);
// // // // // // // // //   const [dropped2, setDropped2] = useState(false);

// // // // // // // // //   // Drop area positions
// // // // // // // // //   const [dropPosition1, setDropPosition1] = useState({ x: 170, y: 300 });
// // // // // // // // //   const [dropPosition2, setDropPosition2] = useState({ x: 170, y: 500 });

// // // // // // // // //   // State for draggable sizes
// // // // // // // // //   const [width1, setWidth1] = useState(80); // Default width for draggable 1
// // // // // // // // //   const [height1, setHeight1] = useState(80); // Default height for draggable 1
// // // // // // // // //   const [width2, setWidth2] = useState(80); // Default width for draggable 2
// // // // // // // // //   const [height2, setHeight2] = useState(80); // Default height for draggable 2

// // // // // // // // //   // Function to check if the draggable item is dropped inside a specific drop area
// // // // // // // // //   const checkDropArea = (x, y, dropArea, setDropped) => {
// // // // // // // // //     console.log(`Dropped at: x: ${x}, y: ${y}`);
// // // // // // // // //     if (
// // // // // // // // //       x >= dropArea.x &&
// // // // // // // // //       x <= dropArea.x + dropArea.width &&
// // // // // // // // //       y >= dropArea.y &&
// // // // // // // // //       y <= dropArea.y + dropArea.height
// // // // // // // // //     ) {
// // // // // // // // //       setDropped(true);
// // // // // // // // //       Alert.alert("Item Dropped", "You have dropped the item successfully!");
// // // // // // // // //     } else {
// // // // // // // // //       setDropped(false);
// // // // // // // // //     }
// // // // // // // // //   };

// // // // // // // // //   return (
// // // // // // // // //     <View style={styles.container}>
// // // // // // // // //       {/* Inputs for Custom Size */}
// // // // // // // // //       {/* <View style={styles.inputContainer}>
// // // // // // // // //         <TextInput
// // // // // // // // //           style={styles.input}
// // // // // // // // //           placeholder="Width for Drag 1"
// // // // // // // // //           keyboardType="numeric"
// // // // // // // // //           onChangeText={(text) => setWidth1(Number(text))}
// // // // // // // // //           value={width1.toString()}
// // // // // // // // //         />
// // // // // // // // //         <TextInput
// // // // // // // // //           style={styles.input}
// // // // // // // // //           placeholder="Height for Drag 1"
// // // // // // // // //           keyboardType="numeric"
// // // // // // // // //           onChangeText={(text) => setHeight1(Number(text))}
// // // // // // // // //           value={height1.toString()}
// // // // // // // // //         />
// // // // // // // // //       </View> */}

// // // // // // // // //       {/* <View style={styles.inputContainer}>
// // // // // // // // //         <TextInput
// // // // // // // // //           style={styles.input}
// // // // // // // // //           placeholder="Width for Drag 2"
// // // // // // // // //           keyboardType="numeric"
// // // // // // // // //           onChangeText={(text) => setWidth2(Number(text))}
// // // // // // // // //           value={width2.toString()}
// // // // // // // // //         />
// // // // // // // // //         <TextInput
// // // // // // // // //           style={styles.input}
// // // // // // // // //           placeholder="Height for Drag 2"
// // // // // // // // //           keyboardType="numeric"
// // // // // // // // //           onChangeText={(text) => setHeight2(Number(text))}
// // // // // // // // //           value={height2.toString()}
// // // // // // // // //         />
// // // // // // // // //       </View> */}

// // // // // // // // //       <Image
// // // // // // // // //         source={{
// // // // // // // // //           uri: "https://jadavpuruniversity.s3-ap-south-1.amazonaws.com/11-2024-7-330-purple-onion.png",
// // // // // // // // //         }}
// // // // // // // // //         style={styles.onionImage}
// // // // // // // // //       />

// // // // // // // // //       {/* Drop area 1 */}
// // // // // // // // //       <View
// // // // // // // // //         style={[
// // // // // // // // //           styles.dropArea,
// // // // // // // // //           { left: dropPosition1.x, top: dropPosition1.y },
// // // // // // // // //         ]}
// // // // // // // // //       >
// // // // // // // // //         <Text style={styles.dropAreaText}>Drop Here 1</Text>
// // // // // // // // //       </View>

// // // // // // // // //       {/* Drop area 2 */}
// // // // // // // // //       <View
// // // // // // // // //         style={[
// // // // // // // // //           styles.dropArea,
// // // // // // // // //           { left: dropPosition2.x, top: dropPosition2.y },
// // // // // // // // //         ]}
// // // // // // // // //       >
// // // // // // // // //         <Text style={styles.dropAreaText}>Drop Here 2</Text>
// // // // // // // // //       </View>

// // // // // // // // //       {/* Draggable component 1 */}
// // // // // // // // //       <Draggable
// // // // // // // // //         x={100} // Initial position of the draggable item
// // // // // // // // //         y={100}
// // // // // // // // //         renderSize={Math.min(width1, height1)} // Ensures square shape for the draggable item
// // // // // // // // //         renderColor="blue" // Color of the draggable item
// // // // // // // // //         onDragRelease={(e, gestureState) => {
// // // // // // // // //           const { moveX, moveY } = gestureState;
// // // // // // // // //           // Check if it is dropped in the first drop area
// // // // // // // // //           checkDropArea(
// // // // // // // // //             moveX,
// // // // // // // // //             moveY,
// // // // // // // // //             { x: dropPosition1.x, y: dropPosition1.y, width: 150, height: 150 },
// // // // // // // // //             setDropped1
// // // // // // // // //           );
// // // // // // // // //         }}
// // // // // // // // //         style={[styles.draggableItem, { width: width1, height: height1 }]} // Apply custom size
// // // // // // // // //       >
// // // // // // // // //         <Text style={styles.draggableText}>Drag me 1</Text>
// // // // // // // // //       </Draggable>

// // // // // // // // //       {/* Draggable component 2 */}
// // // // // // // // //       <Draggable
// // // // // // // // //         x={50} // Initial position of the draggable item
// // // // // // // // //         y={150}
// // // // // // // // //         renderSize={Math.min(width2, height2)} // Ensures square shape for the draggable item
// // // // // // // // //         renderColor="green" // Color of the draggable item
// // // // // // // // //         onDragRelease={(e, gestureState) => {
// // // // // // // // //           const { moveX, moveY } = gestureState;
// // // // // // // // //           // Check if it is dropped in the second drop area
// // // // // // // // //           checkDropArea(
// // // // // // // // //             moveX,
// // // // // // // // //             moveY,
// // // // // // // // //             { x: dropPosition2.x, y: dropPosition2.y, width: 150, height: 150 },
// // // // // // // // //             setDropped2
// // // // // // // // //           );
// // // // // // // // //         }}
// // // // // // // // //         style={[styles.draggableItem, { width: width2, height: height2 }]} // Apply custom size
// // // // // // // // //       >
// // // // // // // // //         <Text style={styles.draggableText}>Drag me 2</Text>
// // // // // // // // //       </Draggable>

// // // // // // // // //       {/* Display drop status */}
// // // // // // // // //       {/* {dropped1 && (
// // // // // // // // //         <Text style={styles.statusText}>
// // // // // // // // //           Item 1 dropped in the correct area!
// // // // // // // // //         </Text>
// // // // // // // // //       )}
// // // // // // // // //       {dropped2 && (
// // // // // // // // //         <Text style={styles.statusText}>
// // // // // // // // //           Item 2 dropped in the correct area!
// // // // // // // // //         </Text>
// // // // // // // // //       )} */}
// // // // // // // // //     </View>
// // // // // // // // //   );
// // // // // // // // // };

// // // // // // // // // const styles = StyleSheet.create({
// // // // // // // // //   container: {
// // // // // // // // //     flex: 1,
// // // // // // // // //     justifyContent: "center",
// // // // // // // // //     alignItems: "center",
// // // // // // // // //     backgroundColor: "#f0f0f0",
// // // // // // // // //     padding: 20,
// // // // // // // // //   },
// // // // // // // // //   onionImage: {
// // // // // // // // //     width: "100%",
// // // // // // // // //     height: 300,
// // // // // // // // //     resizeMode: "contain",
// // // // // // // // //   },
// // // // // // // // //   inputContainer: {
// // // // // // // // //     flexDirection: "row",
// // // // // // // // //     marginBottom: 20,
// // // // // // // // //   },
// // // // // // // // //   input: {
// // // // // // // // //     width: 100,
// // // // // // // // //     height: 40,
// // // // // // // // //     borderColor: "#ccc",
// // // // // // // // //     borderWidth: 1,
// // // // // // // // //     borderRadius: 5,
// // // // // // // // //     marginRight: 10,
// // // // // // // // //     paddingLeft: 10,
// // // // // // // // //   },
// // // // // // // // //   dropArea: {
// // // // // // // // //     width: 150,
// // // // // // // // //     height: 50,
// // // // // // // // //     backgroundColor: "#eaeaea",
// // // // // // // // //     justifyContent: "center",
// // // // // // // // //     alignItems: "center",
// // // // // // // // //     borderWidth: 2,
// // // // // // // // //     borderColor: "#ccc",
// // // // // // // // //     borderRadius: 10,
// // // // // // // // //     position: "absolute",
// // // // // // // // //   },
// // // // // // // // //   dropAreaText: {
// // // // // // // // //     color: "#333",
// // // // // // // // //   },
// // // // // // // // //   draggableItem: {
// // // // // // // // //     justifyContent: "center",
// // // // // // // // //     alignItems: "center",
// // // // // // // // //     borderRadius: 10,
// // // // // // // // //     padding: 10,
// // // // // // // // //   },
// // // // // // // // //   draggableText: {
// // // // // // // // //     color: "#fff",
// // // // // // // // //     fontSize: 14,
// // // // // // // // //   },
// // // // // // // // //   statusText: {
// // // // // // // // //     marginTop: 20,
// // // // // // // // //     color: "green",
// // // // // // // // //   },
// // // // // // // // // });

// // // // // // // // // export default App;

// // // // // // // // import React, { useState } from "react";
// // // // // // // // import { View, StyleSheet, Alert, Image, LogBox } from "react-native";
// // // // // // // // import Draggable from "react-native-draggable";
// // // // // // // // import { Text } from "react-native-paper"; // Import Text from React Native Paper

// // // // // // // // // Suppress the defaultProps warning for now
// // // // // // // // LogBox.ignoreLogs([
// // // // // // // //   "Warning: Draggable: Support for defaultProps will be removed from function components in a future major release.",
// // // // // // // // ]);

// // // // // // // // const App = () => {
// // // // // // // //   // State to track if each item is dropped
// // // // // // // //   const [dropped1, setDropped1] = useState(false);
// // // // // // // //   const [dropped2, setDropped2] = useState(false);
// // // // // // // //   const [dropped3, setDropped3] = useState(false);
// // // // // // // //   const [dropped4, setDropped4] = useState(false);

// // // // // // // //   // Drop area positions
// // // // // // // //   const [dropPosition1, setDropPosition1] = useState({ x: 170, y: 300 });
// // // // // // // //   const [dropPosition2, setDropPosition2] = useState({ x: 170, y: 500 });
// // // // // // // //   const [dropPosition3, setDropPosition3] = useState({ x: 170, y: 700 });
// // // // // // // //   const [dropPosition4, setDropPosition4] = useState({ x: 170, y: 900 });

// // // // // // // //   // State for draggable sizes
// // // // // // // //   const [width1, setWidth1] = useState(80); // Default width for draggable 1
// // // // // // // //   const [height1, setHeight1] = useState(80); // Default height for draggable 1
// // // // // // // //   const [width2, setWidth2] = useState(80); // Default width for draggable 2
// // // // // // // //   const [height2, setHeight2] = useState(80); // Default height for draggable 2
// // // // // // // //   const [width3, setWidth3] = useState(80); // Default width for draggable 3
// // // // // // // //   const [height3, setHeight3] = useState(80); // Default height for draggable 3
// // // // // // // //   const [width4, setWidth4] = useState(80); // Default width for draggable 4
// // // // // // // //   const [height4, setHeight4] = useState(80); // Default height for draggable 4

// // // // // // // //   // Function to check if the draggable item is dropped inside a specific drop area
// // // // // // // //   const checkDropArea = (x, y, dropArea, setDropped) => {
// // // // // // // //     console.log(`Dropped at: x: ${x}, y: ${y}`);
// // // // // // // //     if (
// // // // // // // //       x >= dropArea.x &&
// // // // // // // //       x <= dropArea.x + dropArea.width &&
// // // // // // // //       y >= dropArea.y &&
// // // // // // // //       y <= dropArea.y + dropArea.height
// // // // // // // //     ) {
// // // // // // // //       setDropped(true);
// // // // // // // //       Alert.alert("Item Dropped", "You have dropped the item successfully!");
// // // // // // // //     } else {
// // // // // // // //       setDropped(false);
// // // // // // // //     }
// // // // // // // //   };

// // // // // // // //   return (
// // // // // // // //     <View style={styles.container}>
// // // // // // // //       {/* Displaying the image */}
// // // // // // // //       <Image
// // // // // // // //         source={{
// // // // // // // //           uri: "https://jadavpuruniversity.s3-ap-south-1.amazonaws.com/11-2024-7-330-purple-onion.png",
// // // // // // // //         }}
// // // // // // // //         style={styles.onionImage}
// // // // // // // //       />

// // // // // // // //       {/* Drop areas */}
// // // // // // // //       <View
// // // // // // // //         style={[
// // // // // // // //           styles.dropArea,
// // // // // // // //           { left: dropPosition1.x, top: dropPosition1.y },
// // // // // // // //         ]}
// // // // // // // //       >
// // // // // // // //         <Text style={styles.dropAreaText1}>Drop Here 1</Text>
// // // // // // // //       </View>
// // // // // // // //       <View
// // // // // // // //         style={[
// // // // // // // //           styles.dropArea,
// // // // // // // //           { left: dropPosition2.x, top: dropPosition2.y },
// // // // // // // //         ]}
// // // // // // // //       >
// // // // // // // //         <Text style={styles.dropAreaText2}>Drop Here 2</Text>
// // // // // // // //       </View>
// // // // // // // //       <View
// // // // // // // //         style={[
// // // // // // // //           styles.dropArea,
// // // // // // // //           { left: dropPosition3.x, top: dropPosition3.y },
// // // // // // // //         ]}
// // // // // // // //       >
// // // // // // // //         <Text style={styles.dropAreaText3}>Drop Here 3</Text>
// // // // // // // //       </View>
// // // // // // // //       <View
// // // // // // // //         style={[
// // // // // // // //           styles.dropArea,
// // // // // // // //           { left: dropPosition4.x, top: dropPosition4.y },
// // // // // // // //         ]}
// // // // // // // //       >
// // // // // // // //         <Text style={styles.dropAreaText}>Drop Here 4</Text>
// // // // // // // //       </View>

// // // // // // // //       {/* Draggable components */}
// // // // // // // //       <Draggable
// // // // // // // //         x={100} // Initial position of the draggable item
// // // // // // // //         y={100}
// // // // // // // //         renderSize={Math.min(width1, height1)} // Ensures square shape for the draggable item
// // // // // // // //         renderColor="blue" // Color of the draggable item
// // // // // // // //         onDragRelease={(e, gestureState) => {
// // // // // // // //           const { moveX, moveY } = gestureState;
// // // // // // // //           // Check if it is dropped in the first drop area
// // // // // // // //           checkDropArea(
// // // // // // // //             moveX,
// // // // // // // //             moveY,
// // // // // // // //             { x: dropPosition1.x, y: dropPosition1.y, width: 150, height: 150 },
// // // // // // // //             setDropped1
// // // // // // // //           );
// // // // // // // //         }}
// // // // // // // //         style={[styles.draggableItem, { width: width1, height: height1 }]} // Apply custom size
// // // // // // // //       >
// // // // // // // //         <Text style={styles.draggableText}>Drag me 1</Text>
// // // // // // // //       </Draggable>

// // // // // // // //       <Draggable
// // // // // // // //         x={50} // Initial position of the draggable item
// // // // // // // //         y={150}
// // // // // // // //         renderSize={Math.min(width2, height2)} // Ensures square shape for the draggable item
// // // // // // // //         renderColor="green" // Color of the draggable item
// // // // // // // //         onDragRelease={(e, gestureState) => {
// // // // // // // //           const { moveX, moveY } = gestureState;
// // // // // // // //           // Check if it is dropped in the second drop area
// // // // // // // //           checkDropArea(
// // // // // // // //             moveX,
// // // // // // // //             moveY,
// // // // // // // //             { x: dropPosition2.x, y: dropPosition2.y, width: 150, height: 150 },
// // // // // // // //             setDropped2
// // // // // // // //           );
// // // // // // // //         }}
// // // // // // // //         style={[styles.draggableItem, { width: width2, height: height2 }]} // Apply custom size
// // // // // // // //       >
// // // // // // // //         <Text style={styles.draggableText}>Drag me 2</Text>
// // // // // // // //       </Draggable>

// // // // // // // //       <Draggable
// // // // // // // //         x={100} // Initial position of the draggable item
// // // // // // // //         y={300}
// // // // // // // //         renderSize={Math.min(width3, height3)} // Ensures square shape for the draggable item
// // // // // // // //         renderColor="red" // Color of the draggable item
// // // // // // // //         onDragRelease={(e, gestureState) => {
// // // // // // // //           const { moveX, moveY } = gestureState;
// // // // // // // //           // Check if it is dropped in the third drop area
// // // // // // // //           checkDropArea(
// // // // // // // //             moveX,
// // // // // // // //             moveY,
// // // // // // // //             { x: dropPosition3.x, y: dropPosition3.y, width: 150, height: 150 },
// // // // // // // //             setDropped3
// // // // // // // //           );
// // // // // // // //         }}
// // // // // // // //         style={[styles.draggableItem, { width: width3, height: height3 }]} // Apply custom size
// // // // // // // //       >
// // // // // // // //         <Text style={styles.draggableText}>Drag me 3</Text>
// // // // // // // //       </Draggable>

// // // // // // // //       <Draggable
// // // // // // // //         x={50} // Initial position of the draggable item
// // // // // // // //         y={400}
// // // // // // // //         renderSize={Math.min(width4, height4)} // Ensures square shape for the draggable item
// // // // // // // //         renderColor="orange" // Color of the draggable item
// // // // // // // //         onDragRelease={(e, gestureState) => {
// // // // // // // //           const { moveX, moveY } = gestureState;
// // // // // // // //           // Check if it is dropped in the fourth drop area
// // // // // // // //           checkDropArea(
// // // // // // // //             moveX,
// // // // // // // //             moveY,
// // // // // // // //             { x: dropPosition4.x, y: dropPosition4.y, width: 150, height: 150 },
// // // // // // // //             setDropped4
// // // // // // // //           );
// // // // // // // //         }}
// // // // // // // //         style={[styles.draggableItem, { width: width4, height: height4 }]} // Apply custom size
// // // // // // // //       >
// // // // // // // //         <Text style={styles.draggableText}>Drag me 4</Text>
// // // // // // // //       </Draggable>

// // // // // // // //       {/* Display drop status */}
// // // // // // // //       {dropped1 && (
// // // // // // // //         <Text style={styles.statusText}>
// // // // // // // //           Item 1 dropped in the correct area!
// // // // // // // //         </Text>
// // // // // // // //       )}
// // // // // // // //       {dropped2 && (
// // // // // // // //         <Text style={styles.statusText}>
// // // // // // // //           Item 2 dropped in the correct area!
// // // // // // // //         </Text>
// // // // // // // //       )}
// // // // // // // //       {dropped3 && (
// // // // // // // //         <Text style={styles.statusText}>
// // // // // // // //           Item 3 dropped in the correct area!
// // // // // // // //         </Text>
// // // // // // // //       )}
// // // // // // // //       {dropped4 && (
// // // // // // // //         <Text style={styles.statusText}>
// // // // // // // //           Item 4 dropped in the correct area!
// // // // // // // //         </Text>
// // // // // // // //       )}
// // // // // // // //     </View>
// // // // // // // //   );
// // // // // // // // };

// // // // // // // // const styles = StyleSheet.create({
// // // // // // // //   container: {
// // // // // // // //     flex: 1,
// // // // // // // //     justifyContent: "center",
// // // // // // // //     alignItems: "center",
// // // // // // // //     backgroundColor: "#f0f0f0",
// // // // // // // //     padding: 20,
// // // // // // // //   },
// // // // // // // //   onionImage: {
// // // // // // // //     width: "100%",
// // // // // // // //     height: 300,
// // // // // // // //     resizeMode: "contain",
// // // // // // // //   },
// // // // // // // //   dropArea: {
// // // // // // // //     width: 150,
// // // // // // // //     height: 50,
// // // // // // // //     backgroundColor: "#eaeaea",
// // // // // // // //     justifyContent: "center",
// // // // // // // //     alignItems: "center",
// // // // // // // //     borderWidth: 2,
// // // // // // // //     borderColor: "#ccc",
// // // // // // // //     borderRadius: 10,
// // // // // // // //     position: "absolute",
// // // // // // // //     top: 0,
// // // // // // // //   },
// // // // // // // //   dropAreaText: {
// // // // // // // //     position: "absolute",
// // // // // // // //     top: 0,
// // // // // // // //     color: "#333",
// // // // // // // //   },
// // // // // // // //   draggableItem: {
// // // // // // // //     justifyContent: "center",
// // // // // // // //     alignItems: "center",
// // // // // // // //     borderRadius: 10,
// // // // // // // //     padding: 10,
// // // // // // // //     position: "absolute",
// // // // // // // //   },
// // // // // // // //   draggableText: {
// // // // // // // //     color: "#fff",
// // // // // // // //     fontSize: 14,
// // // // // // // //   },
// // // // // // // //   statusText: {
// // // // // // // //     marginTop: 20,
// // // // // // // //     color: "green",
// // // // // // // //   },
// // // // // // // // });

// // // // // // // // export default App;

// // // // // // // import React, { useState } from "react";
// // // // // // // import { View, StyleSheet, Alert, Image, LogBox } from "react-native";
// // // // // // // import Draggable from "react-native-draggable";
// // // // // // // import { Text } from "react-native-paper"; // Import Text from React Native Paper

// // // // // // // // Suppress the defaultProps warning for now
// // // // // // // LogBox.ignoreLogs([
// // // // // // //   "Warning: Draggable: Support for defaultProps will be removed from function components in a future major release.",
// // // // // // // ]);

// // // // // // // const App = () => {
// // // // // // //   // State to track if each item is dropped
// // // // // // //   const [dropped1, setDropped1] = useState(false);
// // // // // // //   const [dropped2, setDropped2] = useState(false);
// // // // // // //   const [dropped3, setDropped3] = useState(false);
// // // // // // //   const [dropped4, setDropped4] = useState(false);

// // // // // // //   // Custom positions for drop areas
// // // // // // //   const [dropPosition1, setDropPosition1] = useState({ x: 20, y: 340 });
// // // // // // //   const [dropPosition2, setDropPosition2] = useState({ x: 320, y: 380 });
// // // // // // //   const [dropPosition3, setDropPosition3] = useState({ x: 200, y: 480 });
// // // // // // //   const [dropPosition4, setDropPosition4] = useState({ x: 260, y: 570 });

// // // // // // //   // State for draggable sizes
// // // // // // //   const [width1, setWidth1] = useState(80); // Default width for draggable 1
// // // // // // //   const [height1, setHeight1] = useState(80); // Default height for draggable 1
// // // // // // //   const [width2, setWidth2] = useState(80); // Default width for draggable 2
// // // // // // //   const [height2, setHeight2] = useState(80); // Default height for draggable 2
// // // // // // //   const [width3, setWidth3] = useState(80); // Default width for draggable 3
// // // // // // //   const [height3, setHeight3] = useState(80); // Default height for draggable 3
// // // // // // //   const [width4, setWidth4] = useState(80); // Default width for draggable 4
// // // // // // //   const [height4, setHeight4] = useState(80); // Default height for draggable 4

// // // // // // //   // Function to check if the draggable item is dropped inside a specific drop area
// // // // // // //   const checkDropArea = (x, y, dropArea, setDropped) => {
// // // // // // //     console.log(`Dropped at: x: ${x}, y: ${y}`);
// // // // // // //     if (
// // // // // // //       x >= dropArea.x &&
// // // // // // //       x <= dropArea.x + dropArea.width &&
// // // // // // //       y >= dropArea.y &&
// // // // // // //       y <= dropArea.y + dropArea.height
// // // // // // //     ) {
// // // // // // //       setDropped(true);
// // // // // // //       Alert.alert("Item Dropped", "You have dropped the item successfully!");
// // // // // // //     } else {
// // // // // // //       setDropped(false);
// // // // // // //     }
// // // // // // //   };

// // // // // // //   return (
// // // // // // //     <View style={styles.container}>
// // // // // // //       {/* Displaying the image */}
// // // // // // //       <Image
// // // // // // //         source={{
// // // // // // //           uri: "https://jadavpuruniversity.s3-ap-south-1.amazonaws.com/11-2024-7-330-purple-onion.png",
// // // // // // //         }}
// // // // // // //         style={styles.onionImage}
// // // // // // //       />

// // // // // // //       {/* Drop areas with custom positions */}
// // // // // // //       <View
// // // // // // //         style={[
// // // // // // //           styles.dropArea,
// // // // // // //           { left: dropPosition1.x, top: dropPosition1.y },
// // // // // // //         ]}
// // // // // // //       >
// // // // // // //         <Text style={styles.dropAreaText}>Drop Here 1</Text>
// // // // // // //       </View>
// // // // // // //       <View
// // // // // // //         style={[
// // // // // // //           styles.dropArea,
// // // // // // //           { left: dropPosition2.x, top: dropPosition2.y },
// // // // // // //         ]}
// // // // // // //       >
// // // // // // //         <Text style={styles.dropAreaText}>Drop Here 2</Text>
// // // // // // //       </View>
// // // // // // //       <View
// // // // // // //         style={[
// // // // // // //           styles.dropArea,
// // // // // // //           { left: dropPosition3.x, top: dropPosition3.y },
// // // // // // //         ]}
// // // // // // //       >
// // // // // // //         <Text style={styles.dropAreaText}>Drop Here 3</Text>
// // // // // // //       </View>
// // // // // // //       <View
// // // // // // //         style={[
// // // // // // //           styles.dropArea,
// // // // // // //           { left: dropPosition4.x, top: dropPosition4.y },
// // // // // // //         ]}
// // // // // // //       >
// // // // // // //         <Text style={styles.dropAreaText}>Drop Here 4</Text>
// // // // // // //       </View>

// // // // // // //       {/* Draggable components */}
// // // // // // //       <Draggable
// // // // // // //         x={40} // Initial position of the draggable item
// // // // // // //         y={100}
// // // // // // //         renderSize={Math.min(width1, height1)} // Ensures square shape for the draggable item
// // // // // // //         renderColor="blue" // Color of the draggable item
// // // // // // //         onDragRelease={(e, gestureState) => {
// // // // // // //           const { moveX, moveY } = gestureState;
// // // // // // //           // Check if it is dropped in the first drop area
// // // // // // //           checkDropArea(
// // // // // // //             moveX,
// // // // // // //             moveY,
// // // // // // //             { x: dropPosition1.x, y: dropPosition1.y, width: 100, height: 40 },
// // // // // // //             setDropped1
// // // // // // //           );
// // // // // // //         }}
// // // // // // //         style={[styles.draggableItem, { width: width1, height: height1 }]} // Apply custom size
// // // // // // //       >
// // // // // // //         <Text style={styles.draggableText}>Drag me 1</Text>
// // // // // // //       </Draggable>

// // // // // // //       <Draggable
// // // // // // //         x={120} // Initial position of the draggable item
// // // // // // //         y={100}
// // // // // // //         renderSize={Math.min(width2, height2)} // Ensures square shape for the draggable item
// // // // // // //         renderColor="green" // Color of the draggable item
// // // // // // //         onDragRelease={(e, gestureState) => {
// // // // // // //           const { moveX, moveY } = gestureState;
// // // // // // //           // Check if it is dropped in the second drop area
// // // // // // //           checkDropArea(
// // // // // // //             moveX,
// // // // // // //             moveY,
// // // // // // //             { x: dropPosition2.x, y: dropPosition2.y, width: 150, height: 150 },
// // // // // // //             setDropped2
// // // // // // //           );
// // // // // // //         }}
// // // // // // //         style={[styles.draggableItem, { width: width2, height: height2 }]} // Apply custom size
// // // // // // //       >
// // // // // // //         <Text style={styles.draggableText}>Drag me 2</Text>
// // // // // // //       </Draggable>

// // // // // // //       <Draggable
// // // // // // //         x={205} // Initial position of the draggable item
// // // // // // //         y={100}
// // // // // // //         renderSize={Math.min(width3, height3)} // Ensures square shape for the draggable item
// // // // // // //         renderColor="red" // Color of the draggable item
// // // // // // //         onDragRelease={(e, gestureState) => {
// // // // // // //           const { moveX, moveY } = gestureState;
// // // // // // //           // Check if it is dropped in the third drop area
// // // // // // //           checkDropArea(
// // // // // // //             moveX,
// // // // // // //             moveY,
// // // // // // //             { x: dropPosition3.x, y: dropPosition3.y, width: 150, height: 150 },
// // // // // // //             setDropped3
// // // // // // //           );
// // // // // // //         }}
// // // // // // //         style={[styles.draggableItem, { width: width3, height: height3 }]} // Apply custom size
// // // // // // //       >
// // // // // // //         <Text style={styles.draggableText}>Drag me 3</Text>
// // // // // // //       </Draggable>

// // // // // // //       <Draggable
// // // // // // //         x={290} // Initial position of the draggable item
// // // // // // //         y={100}
// // // // // // //         renderSize={Math.min(width4, height4)} // Ensures square shape for the draggable item
// // // // // // //         renderColor="orange" // Color of the draggable item
// // // // // // //         onDragRelease={(e, gestureState) => {
// // // // // // //           const { moveX, moveY } = gestureState;
// // // // // // //           // Check if it is dropped in the fourth drop area
// // // // // // //           checkDropArea(
// // // // // // //             moveX,
// // // // // // //             moveY,
// // // // // // //             { x: dropPosition4.x, y: dropPosition4.y, width: 150, height: 150 },
// // // // // // //             setDropped4
// // // // // // //           );
// // // // // // //         }}
// // // // // // //         style={[styles.draggableItem, { width: width4, height: height4 }]} // Apply custom size
// // // // // // //       >
// // // // // // //         <Text style={styles.draggableText}>Drag me 4</Text>
// // // // // // //       </Draggable>

// // // // // // //       {/* Display drop status */}
// // // // // // //       {/* {dropped1 && (
// // // // // // //         <Text style={styles.statusText}>
// // // // // // //           Item 1 dropped in the correct area!
// // // // // // //         </Text>
// // // // // // //       )}
// // // // // // //       {dropped2 && (
// // // // // // //         <Text style={styles.statusText}>
// // // // // // //           Item 2 dropped in the correct area!
// // // // // // //         </Text>
// // // // // // //       )}
// // // // // // //       {dropped3 && (
// // // // // // //         <Text style={styles.statusText}>
// // // // // // //           Item 3 dropped in the correct area!
// // // // // // //         </Text>
// // // // // // //       )}
// // // // // // //       {dropped4 && (
// // // // // // //         <Text style={styles.statusText}>
// // // // // // //           Item 4 dropped in the correct area!
// // // // // // //         </Text>
// // // // // // //       )} */}
// // // // // // //     </View>
// // // // // // //   );
// // // // // // // };

// // // // // // // const styles = StyleSheet.create({
// // // // // // //   container: {
// // // // // // //     flex: 1,
// // // // // // //     justifyContent: "center",
// // // // // // //     alignItems: "center",
// // // // // // //     backgroundColor: "#f0f0f0",
// // // // // // //     padding: 20,
// // // // // // //   },
// // // // // // //   onionImage: {
// // // // // // //     width: "100%",
// // // // // // //     height: 300,
// // // // // // //     resizeMode: "contain",
// // // // // // //   },
// // // // // // //   dropArea: {
// // // // // // //     width: 150,
// // // // // // //     height: 50,
// // // // // // //     backgroundColor: "#eaeaea",
// // // // // // //     justifyContent: "center",
// // // // // // //     alignItems: "center",
// // // // // // //     borderWidth: 2,
// // // // // // //     borderColor: "#ccc",
// // // // // // //     borderRadius: 10,
// // // // // // //     position: "absolute",
// // // // // // //   },
// // // // // // //   dropAreaText: {
// // // // // // //     color: "#333",
// // // // // // //   },
// // // // // // //   draggableItem: {
// // // // // // //     justifyContent: "center",
// // // // // // //     alignItems: "center",
// // // // // // //     borderRadius: 10,
// // // // // // //     padding: 10,
// // // // // // //     position: "absolute",
// // // // // // //   },
// // // // // // //   draggableText: {
// // // // // // //     color: "#fff",
// // // // // // //     fontSize: 14,
// // // // // // //   },
// // // // // // //   statusText: {
// // // // // // //     marginTop: 20,
// // // // // // //     color: "green",
// // // // // // //   },
// // // // // // // });

// // // // // // // export default App;

// // // // // // import React, { useState } from "react";
// // // // // // import { View, StyleSheet, Alert, Image, LogBox } from "react-native";
// // // // // // import Draggable from "react-native-draggable";
// // // // // // import { Text } from "react-native-paper"; // Import Text from React Native Paper

// // // // // // // Suppress the defaultProps warning for now
// // // // // // LogBox.ignoreLogs([
// // // // // //   "Warning: Draggable: Support for defaultProps will be removed from function components in a future major release.",
// // // // // // ]);

// // // // // // const App = () => {
// // // // // //   // State to track if each item is dropped
// // // // // //   const [dropped1, setDropped1] = useState(false);
// // // // // //   const [dropped2, setDropped2] = useState(false);
// // // // // //   const [dropped3, setDropped3] = useState(false);
// // // // // //   const [dropped4, setDropped4] = useState(false);

// // // // // //   // Custom positions for drop areas
// // // // // //   const [dropPosition1, setDropPosition1] = useState({ x: 20, y: 340 });
// // // // // //   const [dropPosition2, setDropPosition2] = useState({ x: 320, y: 380 });
// // // // // //   const [dropPosition3, setDropPosition3] = useState({ x: 200, y: 480 });
// // // // // //   const [dropPosition4, setDropPosition4] = useState({ x: 260, y: 570 });

// // // // // //   // Initial draggable item positions
// // // // // //   const [initialPosition1, setInitialPosition1] = useState({ x: 40, y: 100 });
// // // // // //   const [initialPosition2, setInitialPosition2] = useState({ x: 120, y: 100 });
// // // // // //   const [initialPosition3, setInitialPosition3] = useState({ x: 205, y: 100 });
// // // // // //   const [initialPosition4, setInitialPosition4] = useState({ x: 290, y: 100 });

// // // // // //   // State for draggable sizes
// // // // // //   const [width1, setWidth1] = useState(80); // Default width for draggable 1
// // // // // //   const [height1, setHeight1] = useState(80); // Default height for draggable 1
// // // // // //   const [width2, setWidth2] = useState(80); // Default width for draggable 2
// // // // // //   const [height2, setHeight2] = useState(80); // Default height for draggable 2
// // // // // //   const [width3, setWidth3] = useState(80); // Default width for draggable 3
// // // // // //   const [height3, setHeight3] = useState(80); // Default height for draggable 3
// // // // // //   const [width4, setWidth4] = useState(80); // Default width for draggable 4
// // // // // //   const [height4, setHeight4] = useState(80); // Default height for draggable 4

// // // // // //   // Function to check if the draggable item is dropped inside a specific drop area
// // // // // //   const checkDropArea = (x, y, dropArea, setDropped, draggableIndex) => {
// // // // // //     console.log(`Dropped at: x: ${x}, y: ${y}`);
// // // // // //     if (
// // // // // //       x >= dropArea.x &&
// // // // // //       x <= dropArea.x + dropArea.width &&
// // // // // //       y >= dropArea.y &&
// // // // // //       y <= dropArea.y + dropArea.height
// // // // // //     ) {
// // // // // //       setDropped(true);
// // // // // //       Alert.alert("Item Dropped", "You have dropped the item successfully!");
// // // // // //     } else {
// // // // // //       setDropped(false);
// // // // // //       // Optionally reset the position of the item if it's not in a valid drop area
// // // // // //       resetDraggablePosition(draggableIndex);
// // // // // //       Alert.alert("Item Outside", "Item was not dropped in the correct area.");
// // // // // //     }
// // // // // //   };

// // // // // //   // Function to reset the draggable item position
// // // // // //   const resetDraggablePosition = (index) => {
// // // // // //     switch (index) {
// // // // // //       case 1:
// // // // // //         setInitialPosition1({ x: 40, y: 100 });
// // // // // //         break;
// // // // // //       case 2:
// // // // // //         setInitialPosition2({ x: 120, y: 100 });
// // // // // //         break;
// // // // // //       case 3:
// // // // // //         setInitialPosition3({ x: 205, y: 100 });
// // // // // //         break;
// // // // // //       case 4:
// // // // // //         setInitialPosition4({ x: 290, y: 100 });
// // // // // //         break;
// // // // // //       default:
// // // // // //         break;
// // // // // //     }
// // // // // //   };

// // // // // //   return (
// // // // // //     <View style={styles.container}>
// // // // // //       {/* Displaying the image */}
// // // // // //       <Image
// // // // // //         source={{
// // // // // //           uri: "https://jadavpuruniversity.s3-ap-south-1.amazonaws.com/11-2024-7-330-purple-onion.png",
// // // // // //         }}
// // // // // //         style={styles.onionImage}
// // // // // //       />

// // // // // //       {/* Drop areas with custom positions */}
// // // // // //       <View
// // // // // //         style={[
// // // // // //           styles.dropArea,
// // // // // //           { left: dropPosition1.x, top: dropPosition1.y },
// // // // // //         ]}
// // // // // //       >
// // // // // //         <Text style={styles.dropAreaText}>Drop Here 1</Text>
// // // // // //       </View>
// // // // // //       <View
// // // // // //         style={[
// // // // // //           styles.dropArea,
// // // // // //           { left: dropPosition2.x, top: dropPosition2.y },
// // // // // //         ]}
// // // // // //       >
// // // // // //         <Text style={styles.dropAreaText}>Drop Here 2</Text>
// // // // // //       </View>
// // // // // //       <View
// // // // // //         style={[
// // // // // //           styles.dropArea,
// // // // // //           { left: dropPosition3.x, top: dropPosition3.y },
// // // // // //         ]}
// // // // // //       >
// // // // // //         <Text style={styles.dropAreaText}>Drop Here 3</Text>
// // // // // //       </View>
// // // // // //       <View
// // // // // //         style={[
// // // // // //           styles.dropArea,
// // // // // //           { left: dropPosition4.x, top: dropPosition4.y },
// // // // // //         ]}
// // // // // //       >
// // // // // //         <Text style={styles.dropAreaText}>Drop Here 4</Text>
// // // // // //       </View>

// // // // // //       {/* Draggable components */}
// // // // // //       <Draggable
// // // // // //         x={initialPosition1.x} // Initial position of the draggable item
// // // // // //         y={initialPosition1.y}
// // // // // //         renderSize={Math.min(width1, height1)} // Ensures square shape for the draggable item
// // // // // //         renderColor="blue" // Color of the draggable item
// // // // // //         onDragRelease={(e, gestureState) => {
// // // // // //           const { moveX, moveY } = gestureState;
// // // // // //           // Check if it is dropped in the first drop area
// // // // // //           checkDropArea(
// // // // // //             moveX,
// // // // // //             moveY,
// // // // // //             { x: dropPosition1.x, y: dropPosition1.y, width: 150, height: 150 },
// // // // // //             setDropped1,
// // // // // //             1
// // // // // //           );
// // // // // //         }}
// // // // // //         style={[styles.draggableItem, { width: width1, height: height1 }]} // Apply custom size
// // // // // //       >
// // // // // //         <Text style={styles.draggableText}>Drag me 1</Text>
// // // // // //       </Draggable>

// // // // // //       <Draggable
// // // // // //         x={initialPosition2.x} // Initial position of the draggable item
// // // // // //         y={initialPosition2.y}
// // // // // //         renderSize={Math.min(width2, height2)} // Ensures square shape for the draggable item
// // // // // //         renderColor="green" // Color of the draggable item
// // // // // //         onDragRelease={(e, gestureState) => {
// // // // // //           const { moveX, moveY } = gestureState;
// // // // // //           // Check if it is dropped in the second drop area
// // // // // //           checkDropArea(
// // // // // //             moveX,
// // // // // //             moveY,
// // // // // //             { x: dropPosition2.x, y: dropPosition2.y, width: 150, height: 150 },
// // // // // //             setDropped2,
// // // // // //             2
// // // // // //           );
// // // // // //         }}
// // // // // //         style={[styles.draggableItem, { width: width2, height: height2 }]} // Apply custom size
// // // // // //       >
// // // // // //         <Text style={styles.draggableText}>Drag me 2</Text>
// // // // // //       </Draggable>

// // // // // //       <Draggable
// // // // // //         x={initialPosition3.x} // Initial position of the draggable item
// // // // // //         y={initialPosition3.y}
// // // // // //         renderSize={Math.min(width3, height3)} // Ensures square shape for the draggable item
// // // // // //         renderColor="red" // Color of the draggable item
// // // // // //         onDragRelease={(e, gestureState) => {
// // // // // //           const { moveX, moveY } = gestureState;
// // // // // //           // Check if it is dropped in the third drop area
// // // // // //           checkDropArea(
// // // // // //             moveX,
// // // // // //             moveY,
// // // // // //             { x: dropPosition3.x, y: dropPosition3.y, width: 150, height: 150 },
// // // // // //             setDropped3,
// // // // // //             3
// // // // // //           );
// // // // // //         }}
// // // // // //         style={[styles.draggableItem, { width: width3, height: height3 }]} // Apply custom size
// // // // // //       >
// // // // // //         <Text style={styles.draggableText}>Drag me 3</Text>
// // // // // //       </Draggable>

// // // // // //       <Draggable
// // // // // //         x={initialPosition4.x} // Initial position of the draggable item
// // // // // //         y={initialPosition4.y}
// // // // // //         renderSize={Math.min(width4, height4)} // Ensures square shape for the draggable item
// // // // // //         renderColor="orange" // Color of the draggable item
// // // // // //         onDragRelease={(e, gestureState) => {
// // // // // //           const { moveX, moveY } = gestureState;
// // // // // //           // Check if it is dropped in the fourth drop area
// // // // // //           checkDropArea(
// // // // // //             moveX,
// // // // // //             moveY,
// // // // // //             { x: dropPosition4.x, y: dropPosition4.y, width: 150, height: 150 },
// // // // // //             setDropped4,
// // // // // //             4
// // // // // //           );
// // // // // //         }}
// // // // // //         style={[styles.draggableItem, { width: width4, height: height4 }]} // Apply custom size
// // // // // //       >
// // // // // //         <Text style={styles.draggableText}>Drag me 4</Text>
// // // // // //       </Draggable>
// // // // // //     </View>
// // // // // //   );
// // // // // // };

// // // // // // const styles = StyleSheet.create({
// // // // // //   container: {
// // // // // //     flex: 1,
// // // // // //     justifyContent: "center",
// // // // // //     alignItems: "center",
// // // // // //     backgroundColor: "#f0f0f0",
// // // // // //     padding: 20,
// // // // // //   },
// // // // // //   onionImage: {
// // // // // //     width: "100%",
// // // // // //     height: 300,
// // // // // //     resizeMode: "contain",
// // // // // //   },
// // // // // //   dropArea: {
// // // // // //     width: 150,
// // // // // //     height: 50,
// // // // // //     backgroundColor: "#eaeaea",
// // // // // //     justifyContent: "center",
// // // // // //     alignItems: "center",
// // // // // //     borderWidth: 2,
// // // // // //     borderColor: "#ccc",
// // // // // //     borderRadius: 10,
// // // // // //     position: "absolute",
// // // // // //   },
// // // // // //   dropAreaText: {
// // // // // //     color: "#333",
// // // // // //   },
// // // // // //   draggableItem: {
// // // // // //     justifyContent: "center",
// // // // // //     alignItems: "center",
// // // // // //     borderRadius: 10,
// // // // // //     padding: 10,
// // // // // //     // position: "absolute",
// // // // // //   },
// // // // // //   draggableText: {
// // // // // //     color: "#fff",
// // // // // //     fontSize: 14,
// // // // // //     textAlign: "center", // Ensures the text is centered within the draggable item
// // // // // //   },
// // // // // //   statusText: {
// // // // // //     marginTop: 20,
// // // // // //     color: "green",
// // // // // //   },
// // // // // // });

// // // // // // export default App;

// // // // // import React, { useState } from "react";
// // // // // import { View, StyleSheet, Alert, Image, LogBox } from "react-native";
// // // // // import Draggable from "react-native-draggable";
// // // // // import { Text } from "react-native-paper";

// // // // // // Suppress the defaultProps warning for now
// // // // // LogBox.ignoreLogs([
// // // // //   "Warning: Draggable: Support for defaultProps will be removed from function components in a future major release.",
// // // // // ]);

// // // // // const App = () => {
// // // // //   // State to track if each item is dropped
// // // // //   const [dropped1, setDropped1] = useState(false);
// // // // //   const [dropped2, setDropped2] = useState(false);
// // // // //   const [dropped3, setDropped3] = useState(false);
// // // // //   const [dropped4, setDropped4] = useState(false);

// // // // //   // Custom positions for drop areas
// // // // //   const [dropPosition1, setDropPosition1] = useState({ x: 20, y: 340 });
// // // // //   const [dropPosition2, setDropPosition2] = useState({ x: 320, y: 380 });
// // // // //   const [dropPosition3, setDropPosition3] = useState({ x: 200, y: 480 });
// // // // //   const [dropPosition4, setDropPosition4] = useState({ x: 260, y: 570 });

// // // // //   // Initial draggable item positions
// // // // //   const [initialPosition1, setInitialPosition1] = useState({ x: 40, y: 100 });
// // // // //   const [initialPosition2, setInitialPosition2] = useState({ x: 120, y: 100 });
// // // // //   const [initialPosition3, setInitialPosition3] = useState({ x: 205, y: 100 });
// // // // //   const [initialPosition4, setInitialPosition4] = useState({ x: 290, y: 100 });

// // // // //   // State for draggable sizes
// // // // //   const [width1, setWidth1] = useState(80); // Default width for draggable 1
// // // // //   const [height1, setHeight1] = useState(80); // Default height for draggable 1
// // // // //   const [width2, setWidth2] = useState(80); // Default width for draggable 2
// // // // //   const [height2, setHeight2] = useState(80); // Default height for draggable 2
// // // // //   const [width3, setWidth3] = useState(80); // Default width for draggable 3
// // // // //   const [height3, setHeight3] = useState(80); // Default height for draggable 3
// // // // //   const [width4, setWidth4] = useState(80); // Default width for draggable 4
// // // // //   const [height4, setHeight4] = useState(80); // Default height for draggable 4

// // // // //   // Function to check if the draggable item is dropped inside a specific drop area
// // // // //   const checkDropArea = (x, y, dropArea, setDropped, draggableIndex) => {
// // // // //     console.log(`Dropped at: x: ${x}, y: ${y}`);
// // // // //     // Allow a slight "buffer" above the drop area
// // // // //     const buffer = 30; // Adjust the buffer height to your needs
// // // // //     if (
// // // // //       x >= dropArea.x &&
// // // // //       x <= dropArea.x + dropArea.width &&
// // // // //       y >= dropArea.y - buffer && // Added buffer to allow the item to be "above" the drop area
// // // // //       y <= dropArea.y + dropArea.height
// // // // //     ) {
// // // // //       setDropped(true);
// // // // //       Alert.alert("Item Dropped", "You have dropped the item successfully!");
// // // // //     } else {
// // // // //       setDropped(false);
// // // // //       // Optionally reset the position of the item if it's not in a valid drop area
// // // // //       resetDraggablePosition(draggableIndex);
// // // // //       Alert.alert("Item Outside", "Item was not dropped in the correct area.");
// // // // //     }
// // // // //   };

// // // // //   // Function to reset the draggable item position
// // // // //   const resetDraggablePosition = (index) => {
// // // // //     switch (index) {
// // // // //       case 1:
// // // // //         setInitialPosition1({ x: 40, y: 100 });
// // // // //         break;
// // // // //       case 2:
// // // // //         setInitialPosition2({ x: 120, y: 100 });
// // // // //         break;
// // // // //       case 3:
// // // // //         setInitialPosition3({ x: 205, y: 100 });
// // // // //         break;
// // // // //       case 4:
// // // // //         setInitialPosition4({ x: 290, y: 100 });
// // // // //         break;
// // // // //       default:
// // // // //         break;
// // // // //     }
// // // // //   };

// // // // //   return (
// // // // //     <View style={styles.container}>
// // // // //       {/* Displaying the image */}
// // // // //       <Image
// // // // //         source={{
// // // // //           uri: "https://jadavpuruniversity.s3-ap-south-1.amazonaws.com/11-2024-7-330-purple-onion.png",
// // // // //         }}
// // // // //         style={styles.onionImage}
// // // // //       />

// // // // //       {/* Drop areas with custom positions */}
// // // // //       <View
// // // // //         style={[
// // // // //           styles.dropArea,
// // // // //           { left: dropPosition1.x, top: dropPosition1.y },
// // // // //         ]}
// // // // //       >
// // // // //         <Text style={styles.dropAreaText}>Drop Here 1</Text>
// // // // //       </View>
// // // // //       <View
// // // // //         style={[
// // // // //           styles.dropArea,
// // // // //           { left: dropPosition2.x, top: dropPosition2.y },
// // // // //         ]}
// // // // //       >
// // // // //         <Text style={styles.dropAreaText}>Drop Here 2</Text>
// // // // //       </View>
// // // // //       <View
// // // // //         style={[
// // // // //           styles.dropArea,
// // // // //           { left: dropPosition3.x, top: dropPosition3.y },
// // // // //         ]}
// // // // //       >
// // // // //         <Text style={styles.dropAreaText}>Drop Here 3</Text>
// // // // //       </View>
// // // // //       <View
// // // // //         style={[
// // // // //           styles.dropArea,
// // // // //           { left: dropPosition4.x, top: dropPosition4.y },
// // // // //         ]}
// // // // //       >
// // // // //         <Text style={styles.dropAreaText}>Drop Here 4</Text>
// // // // //       </View>

// // // // //       {/* Draggable components */}
// // // // //       <Draggable
// // // // //         x={initialPosition1.x} // Initial position of the draggable item
// // // // //         y={initialPosition1.y}
// // // // //         renderSize={Math.min(width1, height1)} // Ensures square shape for the draggable item
// // // // //         renderColor="blue" // Color of the draggable item
// // // // //         onDragRelease={(e, gestureState) => {
// // // // //           const { moveX, moveY } = gestureState;
// // // // //           // Check if it is dropped in the first drop area
// // // // //           checkDropArea(
// // // // //             moveX,
// // // // //             moveY,
// // // // //             { x: dropPosition1.x, y: dropPosition1.y, width: 150, height: 150 },
// // // // //             setDropped1,
// // // // //             1
// // // // //           );
// // // // //         }}
// // // // //         style={[styles.draggableItem, { width: width1, height: height1 }]} // Apply custom size
// // // // //       >
// // // // //         <Text style={styles.draggableText}>Drag me 1</Text>
// // // // //       </Draggable>

// // // // //       <Draggable
// // // // //         x={initialPosition2.x} // Initial position of the draggable item
// // // // //         y={initialPosition2.y}
// // // // //         renderSize={Math.min(width2, height2)} // Ensures square shape for the draggable item
// // // // //         renderColor="green" // Color of the draggable item
// // // // //         onDragRelease={(e, gestureState) => {
// // // // //           const { moveX, moveY } = gestureState;
// // // // //           // Check if it is dropped in the second drop area
// // // // //           checkDropArea(
// // // // //             moveX,
// // // // //             moveY,
// // // // //             { x: dropPosition2.x, y: dropPosition2.y, width: 150, height: 150 },
// // // // //             setDropped2,
// // // // //             2
// // // // //           );
// // // // //         }}
// // // // //         style={[styles.draggableItem, { width: width2, height: height2 }]} // Apply custom size
// // // // //       >
// // // // //         <Text style={styles.draggableText}>Drag me 2</Text>
// // // // //       </Draggable>

// // // // //       <Draggable
// // // // //         x={initialPosition3.x} // Initial position of the draggable item
// // // // //         y={initialPosition3.y}
// // // // //         renderSize={Math.min(width3, height3)} // Ensures square shape for the draggable item
// // // // //         renderColor="red" // Color of the draggable item
// // // // //         onDragRelease={(e, gestureState) => {
// // // // //           const { moveX, moveY } = gestureState;
// // // // //           // Check if it is dropped in the third drop area
// // // // //           checkDropArea(
// // // // //             moveX,
// // // // //             moveY,
// // // // //             { x: dropPosition3.x, y: dropPosition3.y, width: 150, height: 150 },
// // // // //             setDropped3,
// // // // //             3
// // // // //           );
// // // // //         }}
// // // // //         style={[styles.draggableItem, { width: width3, height: height3 }]} // Apply custom size
// // // // //       >
// // // // //         <Text style={styles.draggableText}>Drag me 3</Text>
// // // // //       </Draggable>

// // // // //       <Draggable
// // // // //         x={initialPosition4.x} // Initial position of the draggable item
// // // // //         y={initialPosition4.y}
// // // // //         renderSize={Math.min(width4, height4)} // Ensures square shape for the draggable item
// // // // //         renderColor="orange" // Color of the draggable item
// // // // //         onDragRelease={(e, gestureState) => {
// // // // //           const { moveX, moveY } = gestureState;
// // // // //           // Check if it is dropped in the fourth drop area
// // // // //           checkDropArea(
// // // // //             moveX,
// // // // //             moveY,
// // // // //             { x: dropPosition4.x, y: dropPosition4.y, width: 150, height: 150 },
// // // // //             setDropped4,
// // // // //             4
// // // // //           );
// // // // //         }}
// // // // //         // style={[styles.draggableItem, { width: width4, height: height4 }]} // Apply custom size
// // // // //       >
// // // // //         <Text style={styles.draggableText}>Drag me 4</Text>
// // // // //       </Draggable>
// // // // //     </View>
// // // // //   );
// // // // // };

// // // // // const styles = StyleSheet.create({
// // // // //   container: {
// // // // //     flex: 1,
// // // // //     justifyContent: "center",
// // // // //     alignItems: "center",
// // // // //     backgroundColor: "#f0f0f0",
// // // // //     padding: 20,
// // // // //   },
// // // // //   onionImage: {
// // // // //     width: "100%",
// // // // //     height: 300,
// // // // //     resizeMode: "contain",
// // // // //   },
// // // // //   dropArea: {
// // // // //     width: 150,
// // // // //     height: 50,
// // // // //     backgroundColor: "#eaeaea",
// // // // //     justifyContent: "center",
// // // // //     alignItems: "center",
// // // // //     borderWidth: 2,
// // // // //     borderColor: "#ccc",
// // // // //     borderRadius: 10,
// // // // //     position: "absolute",
// // // // //   },
// // // // //   dropAreaText: {
// // // // //     color: "#333",
// // // // //   },
// // // // //   draggableItem: {
// // // // //     justifyContent: "center",
// // // // //     alignItems: "center",
// // // // //     borderRadius: 10,
// // // // //     padding: 10,
// // // // //   },
// // // // //   draggableText: {
// // // // //     color: "#fff",
// // // // //     fontSize: 14,
// // // // //     textAlign: "center", // Ensures the text is centered within the draggable item
// // // // //   },
// // // // // });

// // // // // export default App;

// // // // import React, { useState } from "react";
// // // // import { View, StyleSheet, Alert, Image, LogBox } from "react-native";
// // // // import Draggable from "react-native-draggable";
// // // // import { Text } from "react-native-paper";

// // // // // Suppress the defaultProps warning for now
// // // // LogBox.ignoreLogs([
// // // //   "Warning: Draggable: Support for defaultProps will be removed from function components in a future major release.",
// // // // ]);

// // // // const App = () => {
// // // //   // State to track if each item is dropped
// // // //   const [dropped1, setDropped1] = useState(false);
// // // //   const [dropped2, setDropped2] = useState(false);
// // // //   const [dropped3, setDropped3] = useState(false);
// // // //   const [dropped4, setDropped4] = useState(false);

// // // //   // State to track the drop area colors
// // // //   const [color1, setColor1] = useState("#eaeaea");
// // // //   const [color2, setColor2] = useState("#eaeaea");
// // // //   const [color3, setColor3] = useState("#eaeaea");
// // // //   const [color4, setColor4] = useState("#eaeaea");

// // // //   // Custom positions for drop areas
// // // //   const [dropPosition1, setDropPosition1] = useState({ x: 20, y: 340 });
// // // //   const [dropPosition2, setDropPosition2] = useState({ x: 320, y: 380 });
// // // //   const [dropPosition3, setDropPosition3] = useState({ x: 200, y: 480 });
// // // //   const [dropPosition4, setDropPosition4] = useState({ x: 260, y: 570 });

// // // //   // Initial draggable item positions
// // // //   const [initialPosition1, setInitialPosition1] = useState({ x: 40, y: 100 });
// // // //   const [initialPosition2, setInitialPosition2] = useState({ x: 120, y: 100 });
// // // //   const [initialPosition3, setInitialPosition3] = useState({ x: 205, y: 100 });
// // // //   const [initialPosition4, setInitialPosition4] = useState({ x: 290, y: 100 });

// // // //   // State for draggable sizes
// // // //   const [width1, setWidth1] = useState(80);
// // // //   const [height1, setHeight1] = useState(80);
// // // //   const [width2, setWidth2] = useState(80);
// // // //   const [height2, setHeight2] = useState(80);
// // // //   const [width3, setWidth3] = useState(80);
// // // //   const [height3, setHeight3] = useState(80);
// // // //   const [width4, setWidth4] = useState(80);
// // // //   const [height4, setHeight4] = useState(80);

// // // //   // Function to check if the draggable item is dropped inside a specific drop area
// // // //   const checkDropArea = (x, y, dropArea, setDropped, setColor, draggableIndex) => {
// // // //     console.log(`Dropped at: x: ${x}, y: ${y}`);
// // // //     const buffer = 30;
// // // //     if (
// // // //       x >= dropArea.x &&
// // // //       x <= dropArea.x + dropArea.width &&
// // // //       y >= dropArea.y - buffer &&
// // // //       y <= dropArea.y + dropArea.height
// // // //     ) {
// // // //       setDropped(true);
// // // //       setColor("#90EE90"); // Set the drop area color to light green on successful drop
// // // //       Alert.alert("Item Dropped", "You have dropped the item successfully!");
// // // //     } else {
// // // //       setDropped(false);
// // // //       resetDraggablePosition(draggableIndex);
// // // //       setColor("#eaeaea"); // Reset the drop area color
// // // //       Alert.alert("Item Outside", "Item was not dropped in the correct area.");
// // // //     }
// // // //   };

// // // //   // Function to reset the draggable item position
// // // //   const resetDraggablePosition = (index) => {
// // // //     switch (index) {
// // // //       case 1:
// // // //         setInitialPosition1({ x: 40, y: 100 });
// // // //         break;
// // // //       case 2:
// // // //         setInitialPosition2({ x: 120, y: 100 });
// // // //         break;
// // // //       case 3:
// // // //         setInitialPosition3({ x: 205, y: 100 });
// // // //         break;
// // // //       case 4:
// // // //         setInitialPosition4({ x: 290, y: 100 });
// // // //         break;
// // // //       default:
// // // //         break;
// // // //     }
// // // //   };

// // // //   return (
// // // //     <View style={styles.container}>
// // // //       {/* Displaying the image */}
// // // //       <Image
// // // //         source={{
// // // //           uri: "https://jadavpuruniversity.s3-ap-south-1.amazonaws.com/11-2024-7-330-purple-onion.png",
// // // //         }}
// // // //         style={styles.onionImage}
// // // //       />

// // // //       {/* Drop areas with custom positions and dynamic colors */}
// // // //       <View
// // // //         style={[
// // // //           styles.dropArea,
// // // //           { left: dropPosition1.x, top: dropPosition1.y, backgroundColor: color1 },
// // // //         ]}
// // // //       >
// // // //         <Text style={styles.dropAreaText}>Drop Here 1</Text>
// // // //       </View>
// // // //       <View
// // // //         style={[
// // // //           styles.dropArea,
// // // //           { left: dropPosition2.x, top: dropPosition2.y, backgroundColor: color2 },
// // // //         ]}
// // // //       >
// // // //         <Text style={styles.dropAreaText}>Drop Here 2</Text>
// // // //       </View>
// // // //       <View
// // // //         style={[
// // // //           styles.dropArea,
// // // //           { left: dropPosition3.x, top: dropPosition3.y, backgroundColor: color3 },
// // // //         ]}
// // // //       >
// // // //         <Text style={styles.dropAreaText}>Drop Here 3</Text>
// // // //       </View>
// // // //       <View
// // // //         style={[
// // // //           styles.dropArea,
// // // //           { left: dropPosition4.x, top: dropPosition4.y, backgroundColor: color4 },
// // // //         ]}
// // // //       >
// // // //         <Text style={styles.dropAreaText}>Drop Here 4</Text>
// // // //       </View>

// // // //       {/* Draggable components */}
// // // //       <Draggable
// // // //         x={initialPosition1.x}
// // // //         y={initialPosition1.y}
// // // //         renderSize={Math.min(width1, height1)}
// // // //         renderColor="blue"
// // // //         onDragRelease={(e, gestureState) => {
// // // //           const { moveX, moveY } = gestureState;
// // // //           checkDropArea(
// // // //             moveX,
// // // //             moveY,
// // // //             { x: dropPosition1.x, y: dropPosition1.y, width: 150, height: 150 },
// // // //             setDropped1,
// // // //             setColor1,
// // // //             1
// // // //           );
// // // //         }}
// // // //         style={[styles.draggableItem, { width: width1, height: height1 }]}
// // // //       >
// // // //         <Text style={styles.draggableText}>Drag me 1</Text>
// // // //       </Draggable>

// // // //       <Draggable
// // // //         x={initialPosition2.x}
// // // //         y={initialPosition2.y}
// // // //         renderSize={Math.min(width2, height2)}
// // // //         renderColor="green"
// // // //         onDragRelease={(e, gestureState) => {
// // // //           const { moveX, moveY } = gestureState;
// // // //           checkDropArea(
// // // //             moveX,
// // // //             moveY,
// // // //             { x: dropPosition2.x, y: dropPosition2.y, width: 150, height: 150 },
// // // //             setDropped2,
// // // //             setColor2,
// // // //             2
// // // //           );
// // // //         }}
// // // //         style={[styles.draggableItem, { width: width2, height: height2 }]}
// // // //       >
// // // //         <Text style={styles.draggableText}>Drag me 2</Text>
// // // //       </Draggable>

// // // //       <Draggable
// // // //         x={initialPosition3.x}
// // // //         y={initialPosition3.y}
// // // //         renderSize={Math.min(width3, height3)}
// // // //         renderColor="red"
// // // //         onDragRelease={(e, gestureState) => {
// // // //           const { moveX, moveY } = gestureState;
// // // //           checkDropArea(
// // // //             moveX,
// // // //             moveY,
// // // //             { x: dropPosition3.x, y: dropPosition3.y, width: 150, height: 150 },
// // // //             setDropped3,
// // // //             setColor3,
// // // //             3
// // // //           );
// // // //         }}
// // // //         style={[styles.draggableItem, { width: width3, height: height3 }]}
// // // //       >
// // // //         <Text style={styles.draggableText}>Drag me 3</Text>
// // // //       </Draggable>

// // // //       <Draggable
// // // //         x={initialPosition4.x}
// // // //         y={initialPosition4.y}
// // // //         renderSize={Math.min(width4, height4)}
// // // //         renderColor="orange"
// // // //         onDragRelease={(e, gestureState) => {
// // // //           const { moveX, moveY } = gestureState;
// // // //           checkDropArea(
// // // //             moveX,
// // // //             moveY,
// // // //             { x: dropPosition4.x, y: dropPosition4.y, width: 150, height: 150 },
// // // //             setDropped4,
// // // //             setColor4,
// // // //             4
// // // //           );
// // // //         }}
// // // //         style={[styles.draggableItem, { width: width4, height: height4 }]}
// // // //       >
// // // //         <Text style={styles.draggableText}>Drag me 4</Text>
// // // //       </Draggable>
// // // //     </View>
// // // //   );
// // // // };

// // // // const styles = StyleSheet.create({
// // // //   container: {
// // // //     flex: 1,
// // // //     justifyContent: "center",
// // // //     alignItems: "center",
// // // //     backgroundColor: "#f0f0f0",
// // // //     padding: 20,
// // // //   },
// // // //   onionImage: {
// // // //     width: "100%",
// // // //     height: 300,
// // // //     resizeMode: "contain",
// // // //   },
// // // //   dropArea: {
// // // //     width: 150,
// // // //     height: 50,
// // // //     justifyContent: "center",
// // // //     alignItems: "center",
// // // //     borderWidth: 2,
// // // //     borderColor: "#ccc",
// // // //     borderRadius: 10,
// // // //     position: "absolute",
// // // //   },
// // // //   dropAreaText: {
// // // //     color: "#333",
// // // //   },
// // // //   draggableItem: {
// // // //     justifyContent: "center",
// // // //     alignItems: "center",
// // // //     borderRadius: 10,
// // // //     padding: 10,
// // // //   },
// // // //   draggableText: {
// // // //     color: "#fff",
// // // //     fontSize: 14,
// // // //     textAlign: "center",
// // // //   },
// // // // });

// // // // export default App;

// // // import React, { useState } from "react";
// // // import { View, StyleSheet, Alert, Image, LogBox } from "react-native";
// // // import Draggable from "react-native-draggable";
// // // import { Text } from "react-native-paper";

// // // // Suppress the defaultProps warning for now
// // // LogBox.ignoreLogs([
// // //   "Warning: Draggable: Support for defaultProps will be removed from function components in a future major release.",
// // // ]);

// // // const App = () => {
// // //   // State to track if each item is dropped
// // //   const [dropped1, setDropped1] = useState(false);
// // //   const [dropped2, setDropped2] = useState(false);
// // //   const [dropped3, setDropped3] = useState(false);
// // //   const [dropped4, setDropped4] = useState(false);

// // //   // State to track the drop area colors
// // //   const [color1, setColor1] = useState("#eaeaea");
// // //   const [color2, setColor2] = useState("#eaeaea");
// // //   const [color3, setColor3] = useState("#eaeaea");
// // //   const [color4, setColor4] = useState("#eaeaea");

// // //   // Custom positions for drop areas
// // //   const [dropPosition1, setDropPosition1] = useState({ x: 20, y: 340 });
// // //   const [dropPosition2, setDropPosition2] = useState({ x: 320, y: 380 });
// // //   const [dropPosition3, setDropPosition3] = useState({ x: 200, y: 480 });
// // //   const [dropPosition4, setDropPosition4] = useState({ x: 260, y: 570 });

// // //   // Initial draggable item positions
// // //   const [initialPosition1, setInitialPosition1] = useState({ x: 40, y: 100 });
// // //   const [initialPosition2, setInitialPosition2] = useState({ x: 120, y: 100 });
// // //   const [initialPosition3, setInitialPosition3] = useState({ x: 205, y: 100 });
// // //   const [initialPosition4, setInitialPosition4] = useState({ x: 290, y: 100 });

// // //   // State for draggable sizes
// // //   const [width1, setWidth1] = useState(80);
// // //   const [height1, setHeight1] = useState(80);
// // //   const [width2, setWidth2] = useState(80);
// // //   const [height2, setHeight2] = useState(80);
// // //   const [width3, setWidth3] = useState(80);
// // //   const [height3, setHeight3] = useState(80);
// // //   const [width4, setWidth4] = useState(80);
// // //   const [height4, setHeight4] = useState(80);

// // //   // Function to check if the draggable item is dropped inside a specific drop area
// // //   const checkDropArea = (x, y, dropArea, setDropped, setColor, draggableIndex) => {
// // //     const buffer = 30; // Allow a slight buffer for tolerance
// // //     if (
// // //       x >= dropArea.x &&
// // //       x <= dropArea.x + dropArea.width &&
// // //       y >= dropArea.y - buffer && // Added buffer for above the drop area
// // //       y <= dropArea.y + dropArea.height + buffer // Added buffer for below the drop area
// // //     ) {
// // //       setDropped(true);
// // //       setColor("#90EE90"); // Set the drop area color to light green on successful drop
// // //       Alert.alert("Item Dropped", "You have dropped the item successfully!");
// // //     } else {
// // //       setDropped(false);
// // //       resetDraggablePosition(draggableIndex);
// // //       setColor("#FF6347"); // Set the color of the drop area to red if dropped outside
// // //       Alert.alert("Wrong Drop", "Item was dropped outside the valid drop area.");
// // //     }
// // //   };

// // //   // Function to reset the draggable item position
// // //   const resetDraggablePosition = (index) => {
// // //     switch (index) {
// // //       case 1:
// // //         setInitialPosition1({ x: 40, y: 100 });
// // //         break;
// // //       case 2:
// // //         setInitialPosition2({ x: 120, y: 100 });
// // //         break;
// // //       case 3:
// // //         setInitialPosition3({ x: 205, y: 100 });
// // //         break;
// // //       case 4:
// // //         setInitialPosition4({ x: 290, y: 100 });
// // //         break;
// // //       default:
// // //         break;
// // //     }
// // //   };

// // //   return (
// // //     <View style={styles.container}>
// // //       {/* Displaying the image */}
// // //       <Image
// // //         source={{
// // //           uri: "https://jadavpuruniversity.s3-ap-south-1.amazonaws.com/11-2024-7-330-purple-onion.png",
// // //         }}
// // //         style={styles.onionImage}
// // //       />

// // //       {/* Drop areas with custom positions and dynamic colors */}
// // //       <View
// // //         style={[
// // //           styles.dropArea,
// // //           { left: dropPosition1.x, top: dropPosition1.y, backgroundColor: color1 },
// // //         ]}
// // //       >
// // //         <Text style={styles.dropAreaText}>Drop Here 1</Text>
// // //       </View>
// // //       <View
// // //         style={[
// // //           styles.dropArea,
// // //           { left: dropPosition2.x, top: dropPosition2.y, backgroundColor: color2 },
// // //         ]}
// // //       >
// // //         <Text style={styles.dropAreaText}>Drop Here 2</Text>
// // //       </View>
// // //       <View
// // //         style={[
// // //           styles.dropArea,
// // //           { left: dropPosition3.x, top: dropPosition3.y, backgroundColor: color3 },
// // //         ]}
// // //       >
// // //         <Text style={styles.dropAreaText}>Drop Here 3</Text>
// // //       </View>
// // //       <View
// // //         style={[
// // //           styles.dropArea,
// // //           { left: dropPosition4.x, top: dropPosition4.y, backgroundColor: color4 },
// // //         ]}
// // //       >
// // //         <Text style={styles.dropAreaText}>Drop Here 4</Text>
// // //       </View>

// // //       {/* Draggable components */}
// // //       <Draggable
// // //         x={initialPosition1.x}
// // //         y={initialPosition1.y}
// // //         renderSize={Math.min(width1, height1)}
// // //         renderColor="blue"
// // //         onDragRelease={(e, gestureState) => {
// // //           const { moveX, moveY } = gestureState;
// // //           checkDropArea(
// // //             moveX,
// // //             moveY,
// // //             { x: dropPosition1.x, y: dropPosition1.y, width: 150, height: 50 },
// // //             setDropped1,
// // //             setColor1,
// // //             1
// // //           );
// // //         }}
// // //         style={[styles.draggableItem, { width: width1, height: height1 }]}
// // //       >
// // //         <Text style={styles.draggableText}>Drag me 1</Text>
// // //       </Draggable>

// // //       <Draggable
// // //         x={initialPosition2.x}
// // //         y={initialPosition2.y}
// // //         renderSize={Math.min(width2, height2)}
// // //         renderColor="green"
// // //         onDragRelease={(e, gestureState) => {
// // //           const { moveX, moveY } = gestureState;
// // //           checkDropArea(
// // //             moveX,
// // //             moveY,
// // //             { x: dropPosition2.x, y: dropPosition2.y, width: 150, height: 50 },
// // //             setDropped2,
// // //             setColor2,
// // //             2
// // //           );
// // //         }}
// // //         style={[styles.draggableItem, { width: width2, height: height2 }]}
// // //       >
// // //         <Text style={styles.draggableText}>Drag me 2</Text>
// // //       </Draggable>

// // //       <Draggable
// // //         x={initialPosition3.x}
// // //         y={initialPosition3.y}
// // //         renderSize={Math.min(width3, height3)}
// // //         renderColor="red"
// // //         onDragRelease={(e, gestureState) => {
// // //           const { moveX, moveY } = gestureState;
// // //           checkDropArea(
// // //             moveX,
// // //             moveY,
// // //             { x: dropPosition3.x, y: dropPosition3.y, width: 150, height: 50 },
// // //             setDropped3,
// // //             setColor3,
// // //             3
// // //           );
// // //         }}
// // //         style={[styles.draggableItem, { width: width3, height: height3 }]}
// // //       >
// // //         <Text style={styles.draggableText}>Drag me 3</Text>
// // //       </Draggable>

// // //       <Draggable
// // //         x={initialPosition4.x}
// // //         y={initialPosition4.y}
// // //         renderSize={Math.min(width4, height4)}
// // //         renderColor="orange"
// // //         onDragRelease={(e, gestureState) => {
// // //           const { moveX, moveY } = gestureState;
// // //           checkDropArea(
// // //             moveX,
// // //             moveY,
// // //             { x: dropPosition4.x, y: dropPosition4.y, width: 150, height: 50 },
// // //             setDropped4,
// // //             setColor4,
// // //             4
// // //           );
// // //         }}
// // //         style={[styles.draggableItem, { width: width4, height: height4 }]}
// // //       >
// // //         <Text style={styles.draggableText}>Drag me 4</Text>
// // //       </Draggable>
// // //     </View>
// // //   );
// // // };

// // // const styles = StyleSheet.create({
// // //   container: {
// // //     flex: 1,
// // //     justifyContent: "center",
// // //     alignItems: "center",
// // //     backgroundColor: "#f0f0f0",
// // //     padding: 20,
// // //   },
// // //   onionImage: {
// // //     width: "100%",
// // //     height: 300,
// // //     resizeMode: "contain",
// // //   },
// // //   dropArea: {
// // //     width: 150,
// // //     height: 50,
// // //     justifyContent: "center",
// // //     alignItems: "center",
// // //     borderWidth: 2,
// // //     borderColor: "#ccc",
// // //     borderRadius: 10,
// // //     position: "absolute",
// // //   },
// // //   dropAreaText: {
// // //     color: "#333",
// // //   },
// // //   draggableItem: {
// // //     justifyContent: "center",
// // //     alignItems: "center",
// // //     borderRadius: 10,
// // //     padding: 10,
// // //   },
// // //   draggableText: {
// // //     color: "#fff",
// // //     fontSize: 14,
// // //     textAlign: "center",
// // //   },
// // // });

// // // export default App;

// // import React, { useState } from "react";
// // import { View, StyleSheet, Alert, Image, LogBox } from "react-native";
// // import Draggable from "react-native-draggable";
// // import { Text } from "react-native-paper";

// // // Suppress the defaultProps warning for now
// // LogBox.ignoreLogs([
// //   "Warning: Draggable: Support for defaultProps will be removed from function components in a future major release.",
// // ]);

// // const App = () => {
// //   // State to track if each item is dropped
// //   const [dropped1, setDropped1] = useState(false);
// //   const [dropped2, setDropped2] = useState(false);
// //   const [dropped3, setDropped3] = useState(false);
// //   const [dropped4, setDropped4] = useState(false);

// //   // State to track the drop area colors
// //   const [color1, setColor1] = useState("#eaeaea");
// //   const [color2, setColor2] = useState("#eaeaea");
// //   const [color3, setColor3] = useState("#eaeaea");
// //   const [color4, setColor4] = useState("#eaeaea");

// //   // Custom positions for drop areas (adjusted for reduced height)
// //   const [dropPosition1, setDropPosition1] = useState({ x: 20, y: 300 });
// //   const [dropPosition2, setDropPosition2] = useState({ x: 320, y: 350 });
// //   const [dropPosition3, setDropPosition3] = useState({ x: 200, y: 450 });
// //   const [dropPosition4, setDropPosition4] = useState({ x: 260, y: 540 });

// //   // Initial draggable item positions
// //   const [initialPosition1, setInitialPosition1] = useState({ x: 40, y: 100 });
// //   const [initialPosition2, setInitialPosition2] = useState({ x: 120, y: 100 });
// //   const [initialPosition3, setInitialPosition3] = useState({ x: 205, y: 100 });
// //   const [initialPosition4, setInitialPosition4] = useState({ x: 290, y: 100 });

// //   // State for draggable sizes
// //   const [width1, setWidth1] = useState(80);
// //   const [height1, setHeight1] = useState(80);
// //   const [width2, setWidth2] = useState(80);
// //   const [height2, setHeight2] = useState(80);
// //   const [width3, setWidth3] = useState(80);
// //   const [height3, setHeight3] = useState(80);
// //   const [width4, setWidth4] = useState(80);
// //   const [height4, setHeight4] = useState(80);

// //   // Function to check if the draggable item is dropped inside a specific drop area
// //   const checkDropArea = (x, y, dropArea, setDropped, setColor, draggableIndex) => {
// //     const buffer = 30; // Allow a slight buffer for tolerance
// //     if (
// //       x >= dropArea.x &&
// //       x <= dropArea.x + dropArea.width &&
// //       y >= dropArea.y - buffer && // Added buffer for above the drop area
// //       y <= dropArea.y + dropArea.height + buffer // Added buffer for below the drop area
// //     ) {
// //       setDropped(true);
// //       setColor("#90EE90"); // Set the drop area color to light green on successful drop
// //       Alert.alert("Item Dropped", "You have dropped the item successfully!");
// //     } else {
// //       setDropped(false);
// //       resetDraggablePosition(draggableIndex);
// //       setColor("#FF6347"); // Set the color of the drop area to red if dropped outside
// //       Alert.alert("Wrong Drop", "Item was dropped outside the valid drop area.");
// //     }
// //   };

// //   // Function to reset the draggable item position
// //   const resetDraggablePosition = (index) => {
// //     switch (index) {
// //       case 1:
// //         setInitialPosition1({ x: 40, y: 100 });
// //         break;
// //       case 2:
// //         setInitialPosition2({ x: 120, y: 100 });
// //         break;
// //       case 3:
// //         setInitialPosition3({ x: 205, y: 100 });
// //         break;
// //       case 4:
// //         setInitialPosition4({ x: 290, y: 100 });
// //         break;
// //       default:
// //         break;
// //     }
// //   };

// //   return (
// //     <View style={styles.container}>
// //       {/* Displaying the image */}
// //       <Image
// //         source={{
// //           uri: "https://jadavpuruniversity.s3-ap-south-1.amazonaws.com/11-2024-7-330-purple-onion.png",
// //         }}
// //         style={styles.onionImage}
// //       />

// //       {/* Drop areas with custom positions and dynamic colors */}
// //       <View
// //         style={[
// //           styles.dropArea,
// //           { left: dropPosition1.x, top: dropPosition1.y, backgroundColor: color1, height: 40 },
// //         ]}
// //       >
// //         <Text style={styles.dropAreaText}>Drop Here 1</Text>
// //       </View>
// //       <View
// //         style={[
// //           styles.dropArea,
// //           { left: dropPosition2.x, top: dropPosition2.y, backgroundColor: color2, height: 40 },
// //         ]}
// //       >
// //         <Text style={styles.dropAreaText}>Drop Here 2</Text>
// //       </View>
// //       <View
// //         style={[
// //           styles.dropArea,
// //           { left: dropPosition3.x, top: dropPosition3.y, backgroundColor: color3, height: 40 },
// //         ]}
// //       >
// //         <Text style={styles.dropAreaText}>Drop Here 3</Text>
// //       </View>
// //       <View
// //         style={[
// //           styles.dropArea,
// //           { left: dropPosition4.x, top: dropPosition4.y, backgroundColor: color4, height: 40 },
// //         ]}
// //       >
// //         <Text style={styles.dropAreaText}>Drop Here 4</Text>
// //       </View>

// //       {/* Draggable components */}
// //       <Draggable
// //         x={initialPosition1.x}
// //         y={initialPosition1.y}
// //         renderSize={Math.min(width1, height1)}
// //         renderColor="blue"
// //         onDragRelease={(e, gestureState) => {
// //           const { moveX, moveY } = gestureState;
// //           checkDropArea(
// //             moveX,
// //             moveY,
// //             { x: dropPosition1.x, y: dropPosition1.y, width: 150, height: 40 },
// //             setDropped1,
// //             setColor1,
// //             1
// //           );
// //         }}
// //         style={[styles.draggableItem, { width: width1, height: height1 }]}
// //       >
// //         <Text style={styles.draggableText}>Drag me 1</Text>
// //       </Draggable>

// //       <Draggable
// //         x={initialPosition2.x}
// //         y={initialPosition2.y}
// //         renderSize={Math.min(width2, height2)}
// //         renderColor="green"
// //         onDragRelease={(e, gestureState) => {
// //           const { moveX, moveY } = gestureState;
// //           checkDropArea(
// //             moveX,
// //             moveY,
// //             { x: dropPosition2.x, y: dropPosition2.y, width: 150, height: 40 },
// //             setDropped2,
// //             setColor2,
// //             2
// //           );
// //         }}
// //         style={[styles.draggableItem, { width: width2, height: height2 }]}
// //       >
// //         <Text style={styles.draggableText}>Drag me 2</Text>
// //       </Draggable>

// //       <Draggable
// //         x={initialPosition3.x}
// //         y={initialPosition3.y}
// //         renderSize={Math.min(width3, height3)}
// //         renderColor="red"
// //         onDragRelease={(e, gestureState) => {
// //           const { moveX, moveY } = gestureState;
// //           checkDropArea(
// //             moveX,
// //             moveY,
// //             { x: dropPosition3.x, y: dropPosition3.y, width: 150, height: 40 },
// //             setDropped3,
// //             setColor3,
// //             3
// //           );
// //         }}
// //         style={[styles.draggableItem, { width: width3, height: height3 }]}
// //       >
// //         <Text style={styles.draggableText}>Drag me 3</Text>
// //       </Draggable>

// //       <Draggable
// //         x={initialPosition4.x}
// //         y={initialPosition4.y}
// //         renderSize={Math.min(width4, height4)}
// //         renderColor="orange"
// //         onDragRelease={(e, gestureState) => {
// //           const { moveX, moveY } = gestureState;
// //           checkDropArea(
// //             moveX,
// //             moveY,
// //             { x: dropPosition4.x, y: dropPosition4.y, width: 150, height: 40 },
// //             setDropped4,
// //             setColor4,
// //             4
// //           );
// //         }}
// //         style={[styles.draggableItem, { width: width4, height: height4 }]}
// //       >
// //         <Text style={styles.draggableText}>Drag me 4</Text>
// //       </Draggable>
// //     </View>
// //   );
// // };

// // const styles = StyleSheet.create({
// //   container: {
// //     flex: 1,
// //     justifyContent: "center",
// //     alignItems: "center",
// //     backgroundColor: "#f0f0f0",
// //     padding: 20,
// //   },
// //   onionImage: {
// //     width: "100%",
// //     height: 300,
// //     resizeMode: "contain",
// //   },
// //   dropArea: {
// //     width: 150,
// //     justifyContent: "center",
// //     alignItems: "center",
// //     borderWidth: 2,
// //     borderColor: "#ccc",
// //     borderRadius: 10,
// //     position: "absolute",
// //   },
// //   dropAreaText: {
// //     color: "#333",
// //   },
// //   draggableItem: {
// //     justifyContent: "center",
// //     alignItems: "center",
// //     borderRadius: 10,
// //     padding: 10,
// //   },
// //   draggableText: {
// //     color: "#fff",
// //     fontSize: 14,
// //     textAlign: "center",
// //   },
// // });

// // export default App;

// import React, { useState } from "react";
// import { View, StyleSheet, Alert, Image, LogBox } from "react-native";
// import Draggable from "react-native-draggable";
// import { Text } from "react-native-paper";

// // Suppress the defaultProps warning for now
// LogBox.ignoreLogs([
//   "Warning: Draggable: Support for defaultProps will be removed from function components in a future major release.",
// ]);

// const App = () => {
//   // State to track if each item is dropped
//   const [dropped1, setDropped1] = useState(false);
//   const [dropped2, setDropped2] = useState(false);
//   const [dropped3, setDropped3] = useState(false);
//   const [dropped4, setDropped4] = useState(false);

//   // State to track the drop area colors
//   const [color1, setColor1] = useState("#eaeaea");
//   const [color2, setColor2] = useState("#eaeaea");
//   const [color3, setColor3] = useState("#eaeaea");
//   const [color4, setColor4] = useState("#eaeaea");

//   // Set custom positions for drop areas
//   const [dropPosition1, setDropPosition1] = useState({ x: 60, y: 450 }); // Manually set X and Y
//   const [dropPosition2, setDropPosition2] = useState({ x: 370, y: 520 });
//   const [dropPosition3, setDropPosition3] = useState({ x: 270, y: 600 });
//   const [dropPosition4, setDropPosition4] = useState({ x: 20, y: 700 });

//   // Initial draggable item positions
//   const [initialPosition1, setInitialPosition1] = useState({ x: 40, y: 680 });
//   const [initialPosition2, setInitialPosition2] = useState({ x: 170, y: 680 });
//   const [initialPosition3, setInitialPosition3] = useState({ x: 335, y: 680 });
//   const [initialPosition4, setInitialPosition4] = useState({ x: 290, y: 680 });

//   // State for draggable sizes
//   const [width1, setWidth1] = useState(30);
//   const [height1, setHeight1] = useState(0);
//   const [width2, setWidth2] = useState(30);
//   const [height2, setHeight2] = useState(30);
//   const [width3, setWidth3] = useState(10);
//   const [height3, setHeight3] = useState(0);
//   const [width4, setWidth4] = useState(30);
//   const [height4, setHeight4] = useState(0);

//   // Function to check if the draggable item is dropped inside a specific drop area
//   // const checkDropArea = (x, y, dropArea, setDropped, setColor, draggableIndex) => {
//   //   const buffer = 30; // Allow a slight buffer for tolerance
//   //   if (
//   //     x >= dropArea.x &&
//   //     x <= dropArea.x + dropArea.width &&
//   //     y >= dropArea.y - buffer && // Added buffer for above the drop area
//   //     y <= dropArea.y + dropArea.height + buffer // Added buffer for below the drop area
//   //   ) {
//   //     setDropped(true);
//   //     setColor("#90EE90"); // Set the drop area color to light green on successful drop
//   //     Alert.alert("Item Dropped", "You have dropped the item successfully!");
//   //   } else {
//   //     setDropped(false);
//   //     resetDraggablePosition(draggableIndex);
//   //     setColor("#FF6347"); // Set the color of the drop area to red if dropped outside
//   //     Alert.alert("Wrong Drop", "Item was dropped outside the valid drop area.");
//   //   }
//   // };

//   const checkDropArea = (
//     x,
//     y,
//     dropArea,
//     setDropped,
//     setColor,
//     draggableIndex
//   ) => {
//     const buffer = 30; // Allow a slight buffer for tolerance

//     // Check if the drop coordinates are within the specified boundaries for each drop area
//     if (
//       x >= dropArea.x &&
//       x <= dropArea.x + dropArea.width &&
//       y >= dropArea.y - buffer && // Added buffer for above the drop area
//       y <= dropArea.y + dropArea.height + buffer // Added buffer for below the drop area
//     ) {
//       setDropped(true);
//       setColor("#90EE90"); // Set the drop area color to light green on successful drop
//       // Alert.alert("Item Dropped", "You have dropped the item successfully!");
//     } else {
//       // Reset draggable item position if dropped outside the valid area
//       setDropped(false);
//       resetDraggablePosition(draggableIndex);
//       setColor("#FF6347"); // Set the color of the drop area to red if dropped outside
//       // Alert.alert(
//       //   "Wrong Drop",
//       //   "Item was dropped outside the valid drop area."
//       // );
//     }
//   };

//   // Function to reset the draggable item position
//   const resetDraggablePosition = (index) => {
//     switch (index) {
//       case 1:
//         setInitialPosition1({ x: 40, y: 100 });
//         break;
//       case 2:
//         setInitialPosition2({ x: 120, y: 100 });
//         break;
//       case 3:
//         setInitialPosition3({ x: 205, y: 100 });
//         break;
//       case 4:
//         setInitialPosition4({ x: 290, y: 100 });
//         break;
//       default:
//         break;
//     }
//   };

//   return (
//     <View style={styles.container}>
//       {/* Displaying the image */}
//       <Image
//         source={{
//           uri: "https://jadavpuruniversity.s3-ap-south-1.amazonaws.com/11-2024-7-330-purple-onion.png",
//         }}
//         style={styles.onionImage}
//       />

//       {/* Drop areas with custom positions and dynamic colors */}
//       <View
//         style={[
//           styles.dropArea,
//           {
//             left: dropPosition1.x,
//             top: dropPosition1.y,
//             backgroundColor: color1,
//             height: 60,
//             position: "absolute",
//             top: 320,
//             left: 30,
//           },
//         ]}
//       >
//         <Text style={styles.dropAreaText}>Drop Here 1</Text>
//       </View>
//       <View
//         style={[
//           styles.dropArea,
//           {
//             left: dropPosition2.x,
//             top: dropPosition2.y,
//             backgroundColor: color2,
//             height: 60,
//             position: "absolute",
//             top: 390,
//             left: 320,
//           },
//         ]}
//       >
//         <Text style={styles.dropAreaText}>Drop Here 2</Text>
//       </View>
//       <View
//         style={[
//           styles.dropArea,
//           {
//             left: dropPosition3.x,
//             top: dropPosition3.y,
//             backgroundColor: color3,
//             height: 60,
//             position: "absolute",
//             top: 490,
//             left: 210,
//           },
//         ]}
//       >
//         <Text style={styles.dropAreaText}>Drop Here 3</Text>
//       </View>
//       <View
//         style={[
//           styles.dropArea,
//           {
//             left: dropPosition4.x,
//             top: dropPosition4.y,
//             backgroundColor: color4,
//             height: 60,
//             position: "absolute",
//             top: 580,
//             left: 270,
//           },
//         ]}
//       >
//         <Text style={styles.dropAreaText}>Drop Here 4</Text>
//       </View>

//       {/* Draggable components */}
//       <Draggable
//         x={initialPosition1.x}
//         y={initialPosition1.y}
//         renderSize={Math.min(width1, height1)}
//         renderColor="blue"
//         onDragRelease={(e, gestureState) => {
//           const { moveX, moveY } = gestureState;
//           checkDropArea(
//             moveX,
//             moveY,
//             { x: dropPosition1.x, y: dropPosition1.y, width: 70, height: 0 },
//             setDropped1,
//             setColor1,
//             1
//           );
//         }}
//         style={[styles.draggableItem, { width: width1, height: height1 }]}
//       >
//         <Text style={styles.draggableText}>Drag me 1</Text>
//       </Draggable>

//       {/* <Draggable
//         x={initialPosition2.x}
//         y={initialPosition2.y}
//         renderSize={Math.min(width2, height2)}
//         renderColor="green"
//         onDragRelease={(e, gestureState) => {
//           const { moveX, moveY } = gestureState;
//           checkDropArea(
//             moveX,
//             moveY,
//             { x: dropPosition2.x, y: dropPosition2.y, width: 150, height: 40 },
//             setDropped2,
//             setColor2,
//             2
//           );
//         }}
//         style={[styles.draggableItem, { width: width2, height: height2 }]}
//       >
//         <Text style={styles.draggableText}>Drag me 2</Text>
//       </Draggable> */}

//       <Draggable
//         x={initialPosition2.x}
//         y={initialPosition2.y}
//         renderSize={Math.min(width2, height2)}
//         // renderColor="green"
//         onDragRelease={(e, gestureState) => {
//           const { moveX, moveY } = gestureState;
//           // Generalized check for drop areas
//           checkDropArea(
//             moveX,
//             moveY,
//             { x: dropPosition2.x, y: dropPosition2.y, width: 70, height: 0 },
//             setDropped2,
//             setColor2,
//             2
//           );
//         }}
//         style={[styles.draggableItem, { width: width2, height: height2 }]}
//       >
//         <Text style={styles.draggableText}>bulb scale</Text>
//       </Draggable>

//       <Draggable
//         x={initialPosition3.x}
//         y={initialPosition3.y}
//         renderSize={Math.min(width3, height3)}
//         // renderColor="red"
//         onDragRelease={(e, gestureState) => {
//           const { moveX, moveY } = gestureState;
//           checkDropArea(
//             moveX,
//             moveY,
//             { x: dropPosition3.x, y: dropPosition3.y, width: 70, height: 0 },
//             setDropped3,
//             setColor3,
//             3
//           );
//         }}
//         style={[styles.draggableItem, { width: width3, height: height3 }]}
//       >
//         <Text style={styles.draggableText}>tunic</Text>
//       </Draggable>

//       <Draggable
//         x={initialPosition4.x}
//         y={initialPosition4.y}
//         renderSize={Math.min(width4, height4)}
//         renderColor="orange"
//         onDragRelease={(e, gestureState) => {
//           const { moveX, moveY } = gestureState;
//           checkDropArea(
//             moveX,
//             moveY,
//             { x: dropPosition4.x, y: dropPosition4.y, width: 70, height: 0 },
//             setDropped4,
//             setColor4,
//             4
//           );
//         }}
//         style={[styles.draggableItem, { width: width4, height: height4 }]}
//       >
//         <Text style={styles.draggableText}>Drag me 4</Text>
//       </Draggable>
//     </View>
//   );
// };

// const styles = StyleSheet.create({
//   container: {
//     flex: 1,
//     justifyContent: "center",
//     alignItems: "center",
//     backgroundColor: "#f0f0f0",
//     padding: 20,
//   },
//   onionImage: {
//     width: "100%",
//     height: 300,
//     resizeMode: "contain",
//   },
//   dropArea: {
//     width: 150,
//     justifyContent: "center",
//     alignItems: "center",
//     borderWidth: 2,
//     borderColor: "#ccc",
//     borderRadius: 10,
//     position: "absolute",
//   },
//   dropAreaText: {
//     color: "#333",
//   },
//   draggableItem: {
//     justifyContent: "center",
//     alignItems: "center",
//     borderRadius: 10,
//     padding: 10,
//   },
//   draggableText: {
//     color: "#fff",
//     backgroundColor: "#000",
//     padding: 5,
//     width: 120,
//     borderRadius: 8,
//     textAlign: "center",
//   },
// });

// export default App;

import React, { useState } from "react";
import { View, StyleSheet, Alert, Image, LogBox } from "react-native";
import Draggable from "react-native-draggable";
import { Text } from "react-native-paper";

// Suppress the defaultProps warning for now
LogBox.ignoreLogs([
  "Warning: Draggable: Support for defaultProps will be removed from function components in a future major release.",
]);

const App = () => {
  // State to track if each item is dropped
  const [dropped1, setDropped1] = useState(false);
  const [dropped2, setDropped2] = useState(false);
  const [dropped3, setDropped3] = useState(false);
  const [dropped4, setDropped4] = useState(false);

  // State to track the drop area colors
  const [color1, setColor1] = useState("#eaeaea");
  const [color2, setColor2] = useState("#eaeaea");
  const [color3, setColor3] = useState("#eaeaea");
  const [color4, setColor4] = useState("#eaeaea");

  // Set custom positions for drop areas
  const [dropPosition1, setDropPosition1] = useState({ x: 60, y: 450 }); // Manually set X and Y
  const [dropPosition2, setDropPosition2] = useState({ x: 370, y: 520 });
  const [dropPosition3, setDropPosition3] = useState({ x: 270, y: 600 });
  const [dropPosition4, setDropPosition4] = useState({ x: 20, y: 700 });

  // Initial draggable item positions
  const [initialPosition1, setInitialPosition1] = useState({ x: 40, y: 680 });
  const [initialPosition2, setInitialPosition2] = useState({ x: 170, y: 680 });
  const [initialPosition3, setInitialPosition3] = useState({ x: 335, y: 680 });
  const [initialPosition4, setInitialPosition4] = useState({ x: 290, y: 680 });

  // State for draggable sizes
  const [width1, setWidth1] = useState(30);
  const [height1, setHeight1] = useState(0);
  const [width2, setWidth2] = useState(30);
  const [height2, setHeight2] = useState(30);
  const [width3, setWidth3] = useState(10);
  const [height3, setHeight3] = useState(0);
  const [width4, setWidth4] = useState(30);
  const [height4, setHeight4] = useState(0);

  // Function to check if the draggable item is dropped inside a specific drop area
  const checkDropArea = (
    x,
    y,
    dropArea,
    setDropped,
    setColor,
    draggableIndex
  ) => {
    const buffer = 30; // Allow a slight buffer for tolerance

    // Check if the drop coordinates are within the specified boundaries for each drop area
    if (
      x >= dropArea.x &&
      x <= dropArea.x + dropArea.width &&
      y >= dropArea.y - buffer && // Added buffer for above the drop area
      y <= dropArea.y + dropArea.height + buffer // Added buffer for below the drop area
    ) {
      setDropped(true);
      setColor("#90EE90"); // Set the drop area color to light green on successful drop
    } else {
      // Reset draggable item position if dropped outside the valid area
      setDropped(false);
      resetDraggablePosition(draggableIndex);
      setColor("#FF6347"); // Set the color of the drop area to red if dropped outside
    }
  };

  // Function to reset the draggable item position
  const resetDraggablePosition = (index) => {
    switch (index) {
      case 1:
        setInitialPosition1({ x: 40, y: 100 });
        break;
      case 2:
        setInitialPosition2({ x: 120, y: 100 });
        break;
      case 3:
        setInitialPosition3({ x: 205, y: 100 });
        break;
      case 4:
        setInitialPosition4({ x: 290, y: 100 });
        break;
      default:
        break;
    }
  };

  return (
    <View style={styles.container}>
      {/* Displaying the image */}
      <View>
        <Image
          source={{
            uri: "https://jadavpuruniversity.s3-ap-south-1.amazonaws.com/11-2024-7-330-purple-onion.png",
          }}
          style={styles.onionImage}
        />
      </View>
      
      {/* Drop areas with custom positions and dynamic colors */}
      <View
        style={[
          styles.dropArea,
          {
            left: dropPosition1.x,
            top: dropPosition1.y,
            backgroundColor: color1,
            height: 60,
            position: "absolute",
            top: 320,
            left: 30,
          },
        ]}
      >
        <Text style={styles.dropAreaText}>Drop Here 1</Text>
      </View>
      <View
        style={[
          styles.dropArea,
          {
            left: dropPosition2.x,
            top: dropPosition2.y,
            backgroundColor: color2,
            height: 60,
            position: "absolute",
            top: 390,
            left: 320,
          },
        ]}
      >
        <Text style={styles.dropAreaText}>Drop Here 2</Text>
      </View>
      <View
        style={[
          styles.dropArea,
          {
            left: dropPosition3.x,
            top: dropPosition3.y,
            backgroundColor: color3,
            height: 60,
            position: "absolute",
            top: 490,
            left: 210,
          },
        ]}
      >
        <Text style={styles.dropAreaText}>Drop Here 3</Text>
      </View>
      <View
        style={[
          styles.dropArea,
          {
            left: dropPosition4.x,
            top: dropPosition4.y,
            backgroundColor: color4,
            height: 60,
            position: "absolute",
            top: 580,
            left: 270,
          },
        ]}
      >
        <Text style={styles.dropAreaText}>Drop Here 4</Text>
      </View>

      {/* Draggable components */}
      <Draggable
        x={initialPosition1.x}
        y={initialPosition1.y}
        renderSize={Math.min(width1, height1)}
        renderColor="blue"
        onDragRelease={(e, gestureState) => {
          const { moveX, moveY } = gestureState;
          checkDropArea(
            moveX,
            moveY,
            { x: dropPosition1.x, y: dropPosition1.y, width: 70, height: 0 },
            setDropped1,
            setColor1,
            1
          );
        }}
        style={[styles.draggableItem, { width: width1, height: height1 }]}
      >
        <Text style={styles.draggableText}>Drag me 1</Text>
      </Draggable>

      {/* Additional Draggable Components */}
      <Draggable
        x={initialPosition2.x}
        y={initialPosition2.y}
        renderSize={Math.min(width2, height2)}
        onDragRelease={(e, gestureState) => {
          const { moveX, moveY } = gestureState;
          checkDropArea(
            moveX,
            moveY,
            { x: dropPosition2.x, y: dropPosition2.y, width: 70, height: 0 },
            setDropped2,
            setColor2,
            2
          );
        }}
        style={[styles.draggableItem, { width: width2, height: height2 }]}
      >
        <Text style={styles.draggableText}>bulb scale</Text>
      </Draggable>

      <Draggable
        x={initialPosition3.x}
        y={initialPosition3.y}
        renderSize={Math.min(width3, height3)}
        onDragRelease={(e, gestureState) => {
          const { moveX, moveY } = gestureState;
          checkDropArea(
            moveX,
            moveY,
            { x: dropPosition3.x, y: dropPosition3.y, width: 70, height: 0 },
            setDropped3,
            setColor3,
            3
          );
        }}
        style={[styles.draggableItem, { width: width3, height: height3 }]}
      >
        <Text style={styles.draggableText}>tunic</Text>
      </Draggable>

      <Draggable
        x={initialPosition4.x}
        y={initialPosition4.y}
        renderSize={Math.min(width4, height4)}
        renderColor="orange"
        onDragRelease={(e, gestureState) => {
          const { moveX, moveY } = gestureState;
          checkDropArea(
            moveX,
            moveY,
            { x: dropPosition4.x, y: dropPosition4.y, width: 70, height: 0 },
            setDropped4,
            setColor4,
            4
          );
        }}
        style={[styles.draggableItem, { width: width4, height: height4 }]}
      >
        <Text style={styles.draggableText}>Drag me 4</Text>
      </Draggable>
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: "center",
    alignItems: "center",
    backgroundColor: "#f0f0f0",
    padding: 20,
  },
  onionImage: {
    width: "100%",
    height: 300,
    resizeMode: "contain",
  },
  dropArea: {
    width: 150,
    justifyContent: "center",
    alignItems: "center",
    borderWidth: 2,
    borderColor: "#ccc",
    borderRadius: 10,
    position: "absolute",
  },
  dropAreaText: {
    color: "#333",
  },
  draggableItem: {
    justifyContent: "center",
    alignItems: "center",
    borderRadius: 10,
    padding: 10,
  },
  draggableText: {
    color: "#fff",
    backgroundColor: "#000",
    padding: 5,
    width: 120,
    borderRadius: 8,
    textAlign: "center",
  },
});

export default App;
